{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/LearningQueue.js","../../src/pronunciationScorer.js","../../src/LanguageTutor.js","../../node_modules/svelte/store/index.mjs","../../src/settingsStore.js","../../src/autoSave.js","../../src/LanguageSettings.svelte","../../src/DisplaySettings.svelte","../../src/AlgorithmSettings.svelte","../../src/CategoryManager.svelte","../../src/DeveloperSettings.svelte","../../src/LearningSession.svelte","../../src/QueueDisplay.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/**\n * LearningQueue - Adaptive Spaced Repetition System\n * \n * A sophisticated queue-based language learning system that uses AI-scored responses\n * and inertia-based movement to optimize vocabulary retention.\n */\n\nexport class LearningQueue {\n  constructor(sourceLanguage, targetLanguage, level = 'basic', baseDir = '/learning/', options = {}, logFunction = null) {\n    this.sourceLanguage = sourceLanguage;\n    this.targetLanguage = targetLanguage;\n    this.baseDir = baseDir;\n    this.level = level;\n    this.testDatabase = {};\n    this.queue = [];\n    this.categories = {};\n    this.currentTestIndex = 0;\n    this.storageKey = `learning_queue_${sourceLanguage}_${targetLanguage}_${level}`;\n    this.log = logFunction || ((level, ...args) => {}); // Default to no-op if no logger provided\n    \n    // Initialize options with defaults\n    this.options = {\n      passThreshold: 7,\n      memoryLength: 20,\n      repetitivenessFactor: 5,\n      ...options\n    };\n    \n    // Don't call init() automatically - let the caller control when it happens\n  }\n  \n  async init() {\n    await this.loadTestData();\n    this.loadState();\n  }\n  \n  async loadTestData() {\n    try {\n      const filename = `${this.sourceLanguage}-${this.targetLanguage}-${this.level}.json`;\n      const response = await fetch(`${this.baseDir}${filename}`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to load test data: ${response.status}`);\n      }\n      \n      this.testDatabase = await response.json();\n    } catch (error) {\n      console.error('Error loading test data:', error);\n      // Fallback to sample data for demo\n      this.testDatabase = {\n        \"travel\": [\n          { source: \"Good morning\", target: \"Buongiorno\" },\n          { source: \"Where is the station?\", target: \"Dove è la stazione?\" },\n          { source: \"Thank you very much\", target: \"Grazie mille\" }\n        ],\n        \"food\": [\n          { source: \"I would like a coffee\", target: \"Vorrei un caffè\" },\n          { source: \"How much does it cost?\", target: \"Quanto costa?\" },\n          { source: \"The bill please\", target: \"Il conto per favore\" }\n        ]\n      };\n    }\n  }\n  \n  loadState() {\n    const savedState = localStorage.getItem(this.storageKey);\n    \n    if (savedState) {\n      try {\n        const state = JSON.parse(savedState);\n        this.categories = state.categories || {};\n        this.queue = state.queue || [];\n        \n        this.syncQueueWithDatabase();\n      } catch (error) {\n        console.error('Error loading saved state:', error);\n        this.initializeAllCategories();\n      }\n    } else {\n      this.initializeAllCategories();\n    }\n  }\n  \n  syncQueueWithDatabase() {\n    const expectedTests = new Set();\n    \n    for (const [categoryName, isSelected] of Object.entries(this.categories)) {\n      if (isSelected && this.testDatabase[categoryName]) {\n        this.testDatabase[categoryName].forEach(test => {\n          expectedTests.add(this.createTestId(test));\n        });\n      }\n    }\n    \n    // Filter out tests that are no longer in selected categories\n    this.queue = this.queue.filter(item => {\n      const testId = this.createTestId({ source: item.source, target: item.target });\n      return expectedTests.has(testId);\n    });\n    \n    // Update existing queue items with new data from JSON (like pronunciation)\n    this.queue = this.queue.map(item => {\n      const testId = this.createTestId({ source: item.source, target: item.target });\n      \n      // Find the corresponding test in the database\n      for (const [categoryName, isSelected] of Object.entries(this.categories)) {\n        if (isSelected && this.testDatabase[categoryName]) {\n          const matchingTest = this.testDatabase[categoryName].find(test => \n            this.createTestId(test) === testId\n          );\n          \n          if (matchingTest) {\n            // Debug: Log pronunciation data\n            this.log(8, '🔍 Syncing queue item:', {\n              testId,\n              oldItem: { source: item.source, target: item.target, pronunciation: item.pronunciation },\n              newData: { source: matchingTest.source, target: matchingTest.target, pronunciation: matchingTest.pronunciation }\n            });\n            \n            // Merge new fields from JSON while preserving learning progress\n            return {\n              ...item, // Keep existing progress data (inertia, recentResults, etc.)\n              source: matchingTest.source,\n              target: matchingTest.target,\n              pronunciation: matchingTest.pronunciation, // Update with new pronunciation data\n              category: categoryName\n            };\n          }\n        }\n      }\n      \n      return item; // Return unchanged if not found (shouldn't happen due to filter above)\n    });\n    \n    const currentTestIds = new Set(this.queue.map(item => \n      this.createTestId({ source: item.source, target: item.target })\n    ));\n    \n    // Add new tests that aren't in the queue yet\n    for (const [categoryName, isSelected] of Object.entries(this.categories)) {\n      if (isSelected && this.testDatabase[categoryName]) {\n        this.testDatabase[categoryName].forEach(test => {\n          const testId = this.createTestId(test);\n          if (!currentTestIds.has(testId)) {\n            this.addTestToQueue(test, categoryName);\n          }\n        });\n      }\n    }\n  }\n  \n  initializeAllCategories() {\n    // Don't automatically enable all categories - let the UI control this\n    for (const categoryName of Object.keys(this.testDatabase)) {\n      this.categories[categoryName] = false; // Start with all disabled\n    }\n  }\n  \n  createTestId(test) {\n    return `${test.source}|${test.target}`;\n  }\n  \n  addTestToQueue(test, categoryName) {\n    const queueItem = {\n      source: test.source,\n      target: test.target,\n      pronunciation: test.pronunciation, // Include pronunciation guide if available\n      inertia: -1, // Start at maximum resistance - phrases are \"sticky\" until learned\n      category: categoryName,\n      recentResults: new Array(this.options.memoryLength).fill(0) // Initialize with full history of failures\n    };\n    \n    const randomIndex = Math.floor(Math.random() * (this.queue.length + 1));\n    this.queue.splice(randomIndex, 0, queueItem);\n  }\n  \n  addCategoryToQueue(categoryName) {\n    if (this.testDatabase[categoryName]) {\n      this.testDatabase[categoryName].forEach(test => {\n        this.addTestToQueue(test, categoryName);\n      });\n    }\n  }\n  \n  removeCategoryFromQueue(categoryName) {\n    if (!this.testDatabase[categoryName]) return;\n    \n    const categoryTestIds = new Set(\n      this.testDatabase[categoryName].map(test => this.createTestId(test))\n    );\n    \n    this.queue = this.queue.filter(item => {\n      const testId = this.createTestId({ source: item.source, target: item.target });\n      return !categoryTestIds.has(testId);\n    });\n    \n    if (this.currentTestIndex >= this.queue.length) {\n      this.currentTestIndex = 0;\n    }\n  }\n  \n  getCategories() {\n    return Object.keys(this.testDatabase);\n  }\n  \n  setCategory(categoryName, enabled) {\n    if (enabled && !this.categories[categoryName]) {\n      this.categories[categoryName] = true;\n      this.addCategoryToQueue(categoryName);\n    } else if (!enabled && this.categories[categoryName]) {\n      this.categories[categoryName] = false;\n      this.removeCategoryFromQueue(categoryName);\n    }\n    \n    this.saveState();\n  }\n  \n  getNextTest() {\n    if (this.queue.length === 0) {\n      return null;\n    }\n    \n    if (this.currentTestIndex >= this.queue.length) {\n      this.currentTestIndex = 0;\n    }\n    \n    const test = this.queue[this.currentTestIndex];\n    \n    // Debug: Log what's being returned\n    this.log(8, '📤 getNextTest returning:', {\n      source: test.source,\n      target: test.target,\n      pronunciation: test.pronunciation,\n      hasPronunciation: !!test.pronunciation,\n      fullTest: test\n    });\n    \n    return {\n      source: test.source,\n      target: test.target,\n      pronunciation: test.pronunciation, // Include pronunciation guide\n      inertia: test.inertia,\n      category: test.category,\n      recentResults: test.recentResults || [] // Include history in response\n    };\n  }\n  \n  scoreCurrentTest(score) {\n    if (this.queue.length === 0 || this.currentTestIndex >= this.queue.length) {\n      return;\n    }\n    \n    const currentTest = this.queue.splice(this.currentTestIndex, 1)[0];\n    \n    // Update binary algorithm with memory\n    if (!currentTest.recentResults) {\n      currentTest.recentResults = [];\n    }\n    \n    // Add new result (1 for pass, 0 for fail)\n    const passed = score >= this.options.passThreshold;\n    currentTest.recentResults.push(passed ? 1 : 0);\n    \n    // If the test failed, convert the most recent success to a failure\n    if (!passed) {\n      // Find the most recent success (working backwards from the end)\n      for (let i = currentTest.recentResults.length - 2; i >= 0; i--) {\n        if (currentTest.recentResults[i] === 1) {\n          currentTest.recentResults[i] = 0;\n          break; // Only convert one success\n        }\n      }\n    }\n    \n    // Keep only last N results\n    const memoryLength = this.options.memoryLength;\n    if (currentTest.recentResults.length > memoryLength) {\n      currentTest.recentResults = currentTest.recentResults.slice(-memoryLength);\n    }\n    \n    // Calculate success rate\n    const successCount = currentTest.recentResults.reduce((sum, result) => sum + result, 0);\n    const successRate = currentTest.recentResults.length > 0 ? successCount / currentTest.recentResults.length : 0;\n    \n    // Calculate movement based on success rate and repetitiveness factor\n    const repetitivenessFactor = this.options.repetitivenessFactor;\n    const power = 2 + (repetitivenessFactor - 1) * 0.2; // Maps 1-10 to 2.0-3.8\n    const movement = Math.pow(successRate, power);\n    \n    // Calculate new position in queue\n    const newPosition = Math.min(Math.floor(movement * this.queue.length), this.queue.length);\n    \n    this.queue.splice(newPosition, 0, currentTest);\n    \n    this.currentTestIndex = 0;\n    \n    this.saveState();\n  }\n  \n  updateOptions(newOptions) {\n    this.options = { ...this.options, ...newOptions };\n  }\n  \n  saveState() {\n    const state = {\n      categories: this.categories,\n      queue: this.queue\n    };\n    \n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(state));\n    } catch (error) {\n      console.error('Error saving state to localStorage:', error);\n    }\n  }\n  \n  getQueueLength() {\n    return this.queue.length;\n  }\n  \n  getTopQueueItems(count = null) {\n    const itemsToShow = count ? Math.min(count, this.queue.length) : this.queue.length;\n    return this.queue.slice(0, itemsToShow).map((item, index) => {\n      const successCount = item.recentResults ? item.recentResults.reduce((sum, result) => sum + result, 0) : 0;\n      const successRate = item.recentResults && item.recentResults.length > 0 ? successCount / item.recentResults.length : 0;\n      \n      return {\n        position: index + 1,\n        source: item.source,\n        target: item.target,\n        inertia: item.inertia,\n        category: item.category,\n        recentResults: item.recentResults || [],\n        successRate: successRate\n      };\n    });\n  }\n  \n  reset() {\n    this.log(5, '🔄 Resetting LearningQueue to initial state');\n    this.queue = [];\n    this.categories = {};\n    this.currentTestIndex = 0;\n    localStorage.removeItem(this.storageKey);\n    this.initializeAllCategories();\n    this.log(5, '✅ LearningQueue reset complete');\n  }\n  \n  getQueueStats() {\n    const stats = {\n      totalItems: this.queue.length,\n      categories: {},\n      inertiaDistribution: {\n        negative: 0,\n        neutral: 0,\n        positive: 0\n      }\n    };\n    \n    // Count items by category and success rate\n    this.queue.forEach(item => {\n      // Category stats\n      if (!stats.categories[item.category]) {\n        stats.categories[item.category] = 0;\n      }\n      stats.categories[item.category]++;\n      \n      // Success rate distribution (using recentResults for binary algorithm)\n      const successCount = item.recentResults ? item.recentResults.reduce((sum, result) => sum + result, 0) : 0;\n      const successRate = item.recentResults && item.recentResults.length > 0 ? successCount / item.recentResults.length : 0;\n      \n      if (successRate < 0.3) {\n        stats.inertiaDistribution.negative++;\n      } else if (successRate > 0.7) {\n        stats.inertiaDistribution.positive++;\n      } else {\n        stats.inertiaDistribution.neutral++;\n      }\n    });\n    \n    return stats;\n  }\n}\n","/**\n * PronunciationScorer - A class for scoring pronunciation accuracy\n * \n * This class compares a reference pronunciation with user input and provides\n * scores for syllable accuracy and emphasis accuracy.\n * \n * Usage:\n *   import { PronunciationScorer } from './pronunciationScorer.js';\n *   const scorer = new PronunciationScorer();\n *   const result = scorer.score(reference, userInput);\n *   console.log(`Score: ${result.finalScore}/10`);\n * \n * Dependencies:\n *   - Requires either fast-levenshtein library (preferred) or uses built-in fallback\n *   - If using fast-levenshtein, ensure it's loaded before this class\n */\nexport class PronunciationScorer {\n    /**\n     * Constructor\n     * @param {Object} options - Configuration options\n     * @param {number} options.syllableWeight - Weight for syllable accuracy (0-1, default: 0.7)\n     * @param {number} options.emphasisWeight - Weight for emphasis accuracy (0-1, default: 0.3)\n     * @param {boolean} options.autoNormalizeWeights - Auto-normalize weights to sum to 1 (default: true)\n     */\n    constructor(options = {}) {\n        this.syllableWeight = options.syllableWeight || 0.8;\n        this.emphasisWeight = options.emphasisWeight || 0.2;\n        this.autoNormalizeWeights = options.autoNormalizeWeights !== false;\n        \n        // Normalize weights if requested\n        if (this.autoNormalizeWeights) {\n            this._normalizeWeights();\n        }\n        \n        // Initialize Levenshtein function\n        this._initializeLevenshtein();\n    }\n    \n    /**\n     * Set scoring weights\n     * @param {number} syllableWeight - Weight for syllable accuracy (0-1)\n     * @param {number} emphasisWeight - Weight for emphasis accuracy (0-1)\n     */\n    setWeights(syllableWeight, emphasisWeight) {\n        this.syllableWeight = syllableWeight;\n        this.emphasisWeight = emphasisWeight;\n        \n        if (this.autoNormalizeWeights) {\n            this._normalizeWeights();\n        }\n    }\n    \n    /**\n     * Score pronunciation accuracy\n     * @param {string} reference - Reference pronunciation with emphasis (case-sensitive)\n     * @param {string} userInput - User's pronunciation attempt\n     * @returns {Object} Scoring results\n     */\n    score(reference, userInput) {\n        // Validate inputs\n        if (typeof reference !== 'string' || typeof userInput !== 'string') {\n            throw new Error('Both reference and userInput must be strings');\n        }\n        \n        // Normalize both strings: replace non-alpha with spaces, collapse multiple spaces\n        const normalizedReference = this._normalizeString(reference);\n        const normalizedUserInput = this._normalizeString(userInput);\n        \n        if (normalizedReference.length === 0 || normalizedUserInput.length === 0) {\n            return this._createResult(0, {\n                syllableDistance: Math.max(normalizedReference.length, normalizedUserInput.length),\n                emphasisDistance: Math.max(normalizedReference.length, normalizedUserInput.length),\n                emphasisDifference: 0,\n                syllableScore: 1,\n                emphasisScore: 0\n            }, reference, userInput);\n        }\n        \n        // Calculate both distances using normalized strings\n        const syllableDistance = this._levenshtein(normalizedReference.toLowerCase(), normalizedUserInput.toLowerCase());\n        const emphasisDistance = this._levenshtein(normalizedReference, normalizedUserInput);\n        \n        // Calculate maximum possible distances for normalization\n        const totalLength = normalizedReference.length + normalizedUserInput.length;\n        const maxSyllableDistance = totalLength;\n        const maxEmphasisDifference = Math.min(normalizedReference.length, normalizedUserInput.length);\n        \n        // Calculate normalized scores (0 = perfect, 1 = worst possible)\n        const syllableScore = maxSyllableDistance > 0 ? syllableDistance / maxSyllableDistance : 0;\n        \n        // Emphasis score is based on the difference between the two distances\n        const emphasisDifference = Math.abs(emphasisDistance - syllableDistance);\n        const emphasisScore = maxEmphasisDifference > 0 ? emphasisDifference / maxEmphasisDifference : 0;\n        \n        // Combine scores with weighting\n        const combinedScore = (syllableScore * this.syllableWeight) + (emphasisScore * this.emphasisWeight);\n        \n        // Convert to 0-10 scale (10 = perfect, 0 = terrible)\n        // Square the distance because the scores felt a bit top-heavy (it was giving heigh scores too often)\n        let finalScore = Math.max(0, 10 * ( (1 - combinedScore) ** 2));\n        \n        // Length-based leniency: shorter phrases get a score boost\n        const referenceLength = normalizedReference.length;\n        if (referenceLength <= 8) {\n            // Apply progressively more generous scoring for very short phrases\n            const lengthBonus = Math.max(0, (8 - referenceLength) * 0.5); // Up to 4 point bonus for very short phrases\n            finalScore = Math.min(10, finalScore + lengthBonus);\n        }\n        \n        return this._createResult(finalScore, {\n            syllableDistance,\n            emphasisDistance,\n            emphasisDifference,\n            syllableScore,\n            emphasisScore\n        }, reference, userInput);\n    }\n    \n    /**\n     * Batch score multiple pronunciation attempts\n     * @param {string} reference - Reference pronunciation\n     * @param {string[]} userInputs - Array of user pronunciation attempts\n     * @returns {Object[]} Array of scoring results\n     */\n    batchScore(reference, userInputs) {\n        if (!Array.isArray(userInputs)) {\n            throw new Error('userInputs must be an array');\n        }\n        \n        return userInputs.map(input => this.score(reference, input));\n    }\n    \n    /**\n     * Get the current configuration\n     * @returns {Object} Current configuration\n     */\n    getConfig() {\n        return {\n            syllableWeight: this.syllableWeight,\n            emphasisWeight: this.emphasisWeight,\n            autoNormalizeWeights: this.autoNormalizeWeights,\n            levenshteinSource: this._levenshteinSource\n        };\n    }\n    \n    /**\n     * Create a detailed result object\n     * @private\n     */\n    _createResult(finalScore, details, originalReference = '', originalUserInput = '') {\n        return {\n            finalScore: Math.round(finalScore * 10) / 10,\n            grade: this._getGrade(finalScore),\n            originalReference: originalReference,\n            originalUserInput: originalUserInput,\n            details: {\n                syllableDistance: details.syllableDistance,\n                emphasisDistance: details.emphasisDistance,\n                emphasisDifference: details.emphasisDifference,\n                syllableScore: Math.round(details.syllableScore * 1000) / 1000,\n                emphasisScore: Math.round(details.emphasisScore * 1000) / 1000,\n                syllableScoreOut10: Math.round(10 * (1 - details.syllableScore) * 10) / 10,\n                emphasisScoreOut10: Math.round(10 * (1 - details.emphasisScore) * 10) / 10\n            },\n            weights: {\n                syllable: this.syllableWeight,\n                emphasis: this.emphasisWeight\n            }\n        };\n    }\n    \n    /**\n     * Get letter grade based on score\n     * @private\n     */\n    _getGrade(score) {\n        if (score >= 9) return 'A+';\n        if (score >= 8) return 'A';\n        if (score >= 7) return 'B';\n        if (score >= 6) return 'C';\n        if (score >= 5) return 'D';\n        return 'F';\n    }\n    \n    /**\n     * Normalize weights to sum to 1\n     * @private\n     */\n    _normalizeWeights() {\n        const total = this.syllableWeight + this.emphasisWeight;\n        if (total > 0) {\n            this.syllableWeight = this.syllableWeight / total;\n            this.emphasisWeight = this.emphasisWeight / total;\n        }\n    }\n    \n    /**\n     * Normalize input string by replacing non-alpha characters with spaces\n     * and collapsing multiple spaces into single spaces\n     * @private\n     */\n    _normalizeString(text) {\n        return text\n            .replace(/[^a-zA-Z]/g, ' ')  // Replace non-alphabetic characters with spaces\n            .replace(/\\s+/g, ' ')        // Replace multiple spaces with single space\n            .trim();                     // Remove leading/trailing whitespace\n    }\n    \n    /**\n     * Initialize Levenshtein distance function\n     * @private\n     */\n    _initializeLevenshtein() {\n        // Try to use fast-levenshtein if available\n        if (typeof levenshtein !== 'undefined' && levenshtein.get) {\n            this._levenshtein = levenshtein.get;\n            this._levenshteinSource = 'fast-levenshtein';\n        }\n        // Try alternative global names\n        else if (typeof fastLevenshtein !== 'undefined' && fastLevenshtein.get) {\n            this._levenshtein = fastLevenshtein.get;\n            this._levenshteinSource = 'fast-levenshtein (fastLevenshtein)';\n        }\n        // Try window.Levenshtein (from levenshtein.min.js)\n        else if (typeof window !== 'undefined' && typeof window.Levenshtein !== 'undefined' && window.Levenshtein.get) {\n            this._levenshtein = window.Levenshtein.get;\n            this._levenshteinSource = 'fast-levenshtein (window.Levenshtein)';\n        }\n        // Try global Levenshtein\n        else if (typeof Levenshtein !== 'undefined' && Levenshtein.get) {\n            this._levenshtein = Levenshtein.get;\n            this._levenshteinSource = 'fast-levenshtein (Levenshtein)';\n        }\n        // Fallback to built-in implementation\n        else {\n            this._levenshtein = this._builtinLevenshtein;\n            this._levenshteinSource = 'built-in';\n        }\n    }\n    \n    /**\n     * Built-in Levenshtein distance implementation\n     * @private\n     */\n    _builtinLevenshtein(a, b) {\n        const matrix = [];\n        \n        // Initialize first row and column\n        for (let i = 0; i <= b.length; i++) {\n            matrix[i] = [i];\n        }\n        for (let j = 0; j <= a.length; j++) {\n            matrix[0][j] = j;\n        }\n        \n        // Fill the matrix\n        for (let i = 1; i <= b.length; i++) {\n            for (let j = 1; j <= a.length; j++) {\n                if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                    matrix[i][j] = matrix[i - 1][j - 1];\n                } else {\n                    matrix[i][j] = Math.min(\n                        matrix[i - 1][j - 1] + 1, // substitution\n                        matrix[i][j - 1] + 1,     // insertion\n                        matrix[i - 1][j] + 1      // deletion\n                    );\n                }\n            }\n        }\n        \n        return matrix[b.length][a.length];\n    }\n    \n    /**\n     * Static helper method to create a scorer with common presets\n     */\n    static createPreset(preset = 'balanced') {\n        const presets = {\n            'syllable-focused': { syllableWeight: 0.8, emphasisWeight: 0.2 },\n            'balanced': { syllableWeight: 0.7, emphasisWeight: 0.3 },\n            'emphasis-focused': { syllableWeight: 0.5, emphasisWeight: 0.5 },\n            'equal': { syllableWeight: 0.5, emphasisWeight: 0.5 }\n        };\n        \n        if (!presets[preset]) {\n            throw new Error(`Unknown preset: ${preset}. Available: ${Object.keys(presets).join(', ')}`);\n        }\n        \n        return new PronunciationScorer(presets[preset]);\n    }\n}\n\n// Example usage and tests (can be removed in production)\n// Now using ES6 exports - import with: import { PronunciationScorer } from './pronunciationScorer.js';\n\n// Example usage:\n/*\n// Basic usage\nconst scorer = new PronunciationScorer();\nconst result = scorer.score(\"DOH-veh POS-soh\", \"DOH-veh pos-soh\");\nconsole.log(`Score: ${result.finalScore}/10 (${result.grade})`);\n\n// Custom weights\nconst customScorer = new PronunciationScorer({\n    syllableWeight: 0.8,\n    emphasisWeight: 0.2\n});\n\n// Using presets\nconst balancedScorer = PronunciationScorer.createPreset('balanced');\nconst emphasisScorer = PronunciationScorer.createPreset('emphasis-focused');\n\n// Batch scoring\nconst attempts = [\"DOH-veh pos-soh\", \"doh-VEH pos-SOH\", \"DOH-veh POS-soh\"];\nconst results = scorer.batchScore(\"DOH-veh POS-soh\", attempts);\n*/\n","/**\n * LanguageTutor - AI-Powered Language Learning with Real-time Pronunciation Scoring\n * \n * A powerful JavaScript class for building language learning applications with real-time \n * pronunciation scoring and text-to-speech feedback using OpenAI's Realtime API.\n * Enhanced with audible notification bleeps for user interaction prompts.\n */\n\nimport { PronunciationScorer } from './pronunciationScorer.js';\n\nexport class LanguageTutor {\n    constructor(outputElement, sourceLanguage = 'English', targetLanguage = 'Italian', options = {}, logFunction = null) {\n        // Basic configuration\n        this.outputElement = outputElement;\n        this.sourceLanguage = sourceLanguage;\n        this.targetLanguage = targetLanguage;\n        this.log = logFunction || ((level, ...args) => {}); // Use provided log function or no-op\n        \n        // Default options\n        const defaultOptions = {\n            apiKeyEndpoint: '?mode=get_key',\n            feedbackThreshold: 7,  // Score below which target pronunciation is played\n            passThreshold: 7,      // Score threshold for determining pass/fail (for audio feedback)\n            statusCallback: null,  // Optional callback for status updates\n            audioPath: 'audio/',   // Base path for pre-generated audio files\n            enableBleep: true,     // Enable audible notification bleep (NEW)\n            enableAudioHints: false, // Enable audio hints for struggling phrases\n            audioHintDuration: 0.25, // Fraction of audio to play as hint (0.25 = 25%)\n            audioHintMinWords: 3,    // Minimum words in phrase to enable hints\n            vad: {\n                threshold: 0.6,\n                prefixPaddingMs: 200,\n                silenceDurationMs: 800\n            }\n        };\n        \n        // Merge user options with defaults\n        this.options = this.mergeOptions(defaultOptions, options);\n        \n        // Audio state\n        this.audioContext = null;\n        this.currentAudioStream = null;\n        this.audioProcessor = null;\n        this.ws = null;\n        this.isListening = false;\n        this.isLearningSessionActive = false; // Track if we're in a learning session\n        \n        // Session key management\n        this.currentSessionKey = null;\n        this.keyRefreshInterval = null;\n        \n        // Initialize pronunciation scorer\n        this.pronunciationScorer = new PronunciationScorer();\n        \n        this.log(3, `🎓 LanguageTutor initialized: ${sourceLanguage} → ${targetLanguage}`);\n        this.log(7, '📋 Options:', this.options);\n        \n        // Start session key management\n        this.initializeSessionKeys();\n    }\n    \n    // ========== LOGGING SYSTEM ==========\n    \n    // Error and warning logging also use the passed-in log function\n    \n    // ========== UTILITY METHODS ==========\n    mergeOptions(defaults, userOptions) {\n        const merged = { ...defaults };\n        \n        for (const key in userOptions) {\n            if (userOptions.hasOwnProperty(key)) {\n                if (typeof userOptions[key] === 'object' && userOptions[key] !== null && !Array.isArray(userOptions[key])) {\n                    // Deep merge for nested objects like 'vad'\n                    merged[key] = { ...defaults[key], ...userOptions[key] };\n                } else {\n                    merged[key] = userOptions[key];\n                }\n            }\n        }\n        \n        return merged;\n    }\n    \n    // ========== AUDIO NOTIFICATION SYSTEM (NEW) ==========\n    /**\n     * Generate a pleasant notification bleep to signal user interaction\n     */\n    async playNotificationBleep() {\n        if (!this.options.enableBleep) {\n            this.log(7, '🔇 Notification bleep disabled');\n            return;\n        }\n        \n        try {\n            this.log(6, '🎵 Playing notification bleep');\n            \n            // Create a temporary audio context for the bleep\n            const tempAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n            \n            // Create a pleasant two-tone bleep (like a gentle chime)\n            const duration = 0.3; // 300ms total\n            const sampleRate = tempAudioContext.sampleRate;\n            const buffer = tempAudioContext.createBuffer(1, duration * sampleRate, sampleRate);\n            const data = buffer.getChannelData(0);\n            \n            // Generate a pleasant two-tone bleep: 800Hz then 1000Hz\n            for (let i = 0; i < buffer.length; i++) {\n                const time = i / sampleRate;\n                let frequency;\n                let amplitude;\n                \n                if (time < 0.15) {\n                    // First tone: 800Hz\n                    frequency = 800;\n                    amplitude = 0.1 * Math.sin(Math.PI * time / 0.15); // Fade in/out\n                } else {\n                    // Second tone: 1000Hz  \n                    frequency = 1000;\n                    amplitude = 0.1 * Math.sin(Math.PI * (time - 0.15) / 0.15); // Fade in/out\n                }\n                \n                data[i] = amplitude * Math.sin(2 * Math.PI * frequency * time);\n            }\n            \n            // Play the bleep\n            const source = tempAudioContext.createBufferSource();\n            source.buffer = buffer;\n            source.connect(tempAudioContext.destination);\n            \n            return new Promise((resolve) => {\n                source.onended = () => {\n                    tempAudioContext.close();\n                    this.log(7, '✅ Notification bleep completed');\n                    resolve();\n                };\n                \n                source.start();\n            });\n            \n        } catch (error) {\n            this.log(4, '⚠️ Could not play notification bleep:', error.message);\n            // Don't throw - this is a nice-to-have feature\n        }\n    }\n    \n    /**\n     * Play a success feedback bleep (ascending tones)\n     */\n    async playSuccessBleep() {\n        if (!this.options.enableBleep) {\n            this.log(7, '🔇 Success bleep disabled');\n            return;\n        }\n        \n        try {\n            this.log(6, '🎵 Playing success bleep');\n            \n            const tempAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n            const duration = 0.25; // 250ms\n            const sampleRate = tempAudioContext.sampleRate;\n            const buffer = tempAudioContext.createBuffer(1, duration * sampleRate, sampleRate);\n            const data = buffer.getChannelData(0);\n            \n            // Generate ascending success tones: 600Hz -> 800Hz -> 1000Hz\n            for (let i = 0; i < buffer.length; i++) {\n                const time = i / sampleRate;\n                let frequency;\n                let amplitude = 0.08; // Slightly quieter than notification\n                \n                if (time < 0.08) {\n                    frequency = 600;\n                    amplitude *= Math.sin(Math.PI * time / 0.08);\n                } else if (time < 0.16) {\n                    frequency = 800;\n                    amplitude *= Math.sin(Math.PI * (time - 0.08) / 0.08);\n                } else {\n                    frequency = 1000;\n                    amplitude *= Math.sin(Math.PI * (time - 0.16) / 0.09);\n                }\n                \n                data[i] = amplitude * Math.sin(2 * Math.PI * frequency * time);\n            }\n            \n            const source = tempAudioContext.createBufferSource();\n            source.buffer = buffer;\n            source.connect(tempAudioContext.destination);\n            \n            return new Promise((resolve) => {\n                source.onended = () => {\n                    tempAudioContext.close();\n                    this.log(7, '✅ Success bleep completed');\n                    resolve();\n                };\n                source.start();\n            });\n            \n        } catch (error) {\n            this.log(4, '⚠️ Could not play success bleep:', error.message);\n        }\n    }\n    \n    /**\n     * Play a failure feedback bleep (descending tone)\n     */\n    async playFailureBleep() {\n        if (!this.options.enableBleep) {\n            this.log(7, '🔇 Failure bleep disabled');\n            return;\n        }\n        \n        try {\n            this.log(6, '🎵 Playing failure bleep');\n            \n            const tempAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n            const duration = 0.4; // 400ms - longer for failure\n            const sampleRate = tempAudioContext.sampleRate;\n            const buffer = tempAudioContext.createBuffer(1, duration * sampleRate, sampleRate);\n            const data = buffer.getChannelData(0);\n            \n            // Generate descending failure tone: 500Hz -> 300Hz\n            for (let i = 0; i < buffer.length; i++) {\n                const time = i / sampleRate;\n                const progress = time / duration;\n                const frequency = 500 - (200 * progress); // Descend from 500Hz to 300Hz\n                let amplitude = 0.06 * (1 - progress * 0.3); // Fade out gradually\n                \n                data[i] = amplitude * Math.sin(2 * Math.PI * frequency * time);\n            }\n            \n            const source = tempAudioContext.createBufferSource();\n            source.buffer = buffer;\n            source.connect(tempAudioContext.destination);\n            \n            return new Promise((resolve) => {\n                source.onended = () => {\n                    tempAudioContext.close();\n                    this.log(7, '✅ Failure bleep completed');\n                    resolve();\n                };\n                source.start();\n            });\n            \n        } catch (error) {\n            this.log(4, '⚠️ Could not play failure bleep:', error.message);\n        }\n    }\n    \n    // ========== SESSION KEY MANAGEMENT ==========\n    async initializeSessionKeys() {\n        try {\n            await this.refreshSessionKey();\n            this.startKeyRefreshTimer();\n        } catch (error) {\n            this.log(1, '❌ Failed to initialize session keys:', error);\n        }\n    }\n    \n    async refreshSessionKey() {\n        try {\n            this.log(5, '🔑 Refreshing session key...');\n            const response = await fetch(this.options.apiKeyEndpoint);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            if (data.error) {\n                throw new Error(data.error);\n            }\n            this.currentSessionKey = data.session_token;\n            this.log(4, '✅ Session key refreshed successfully');\n            return this.currentSessionKey;\n        } catch (error) {\n            this.log(2, '❌ Error refreshing session key:', error);\n            this.showError('Failed to refresh session key: ' + error.message);\n            return null;\n        }\n    }\n    \n    async getSessionKey() {\n        if (this.currentSessionKey) {\n            this.log(7, '🔑 Using cached session key');\n            return this.currentSessionKey;\n        }\n        \n        this.log(5, '🔑 Getting initial session key...');\n        return await this.refreshSessionKey();\n    }\n    \n    startKeyRefreshTimer() {\n        // Refresh key every 50 seconds (10 second buffer before 60s expiry)\n        this.keyRefreshInterval = setInterval(async () => {\n            await this.refreshSessionKey();\n        }, 50000);\n        this.log(6, '⏰ Started key refresh timer (every 50 seconds)');\n    }\n    \n    stopKeyRefreshTimer() {\n        if (this.keyRefreshInterval) {\n            clearInterval(this.keyRefreshInterval);\n            this.keyRefreshInterval = null;\n            this.log(6, '⏰ Stopped key refresh timer');\n        }\n    }\n    \n    // ========== AUDIO PLAYBACK ==========\n    async speakText(text, language = null) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                // Auto-detect language if not specified\n                if (!language) {\n                    language = this.detectLanguage(text);\n                }\n                \n                this.log(4, `🎙️ Playing audio for \"${text}\" in ${language}`);\n                \n                // Determine if this is native or learning speed based on language\n                const isNativeLanguage = (language === this.sourceLanguage);\n                const speedMode = isNativeLanguage ? 'native' : 'learning';\n                \n                this.log(6, `🎯 Speed mode: ${speedMode} (${isNativeLanguage ? 'normal speed' : 'slow/clear'})`);\n                \n                // Generate filename using same logic as server-side script\n                const filename = await this.generateAudioFilename(text);\n                const audioUrl = `${this.options.audioPath}${language}/${speedMode}/${filename}`;\n                \n                this.log(6, `🔊 Loading audio from: ${audioUrl}`);\n                \n                // Load and play the audio file\n                await this.playAudioFromUrl(audioUrl);\n                resolve();\n                \n            } catch (error) {\n                this.log(3, '❌ Error playing audio:', error);\n                this.showError('Audio playback failed: ' + error.message);\n                reject(error);\n            }\n        });\n    }\n    \n    /**\n     * Generate audio filename using same logic as server-side script\n     * Now uses SHA-256 instead of MD5 for better compatibility\n     */\n    async generateAudioFilename(text) {\n        // Convert to UTF-8 bytes first, then sanitize byte by byte to match server behavior\n        const utf8Bytes = this.stringToUtf8Bytes(text);\n        \n        // Take first 20 bytes (not characters) and convert each byte to char\n        const first20Bytes = utf8Bytes.slice(0, 20);\n        let sanitized = '';\n        \n        for (let i = 0; i < first20Bytes.length; i++) {\n            const byte = first20Bytes[i];\n            const char = String.fromCharCode(byte);\n            \n            // Replace non-alphanumeric with underscore (same regex as server: [^a-zA-Z0-9])\n            if (/[a-zA-Z0-9]/.test(char)) {\n                sanitized += char;\n            } else {\n                sanitized += '_';\n            }\n        }\n        \n        // Remove trailing underscores\n        sanitized = sanitized.replace(/_+$/, '');\n        \n        if (!sanitized) {\n            sanitized = 'phrase';\n        }\n        \n        // Generate SHA-256 hash of original text\n        const hash = await this.sha256(text);\n        \n        // Take first 8 characters of hash to match typical hash length expectations\n        const shortHash = hash.substring(0, 8);\n        \n        return `${sanitized}_${shortHash}.mp3`;\n    }\n    \n    /**\n     * SHA-256 hash implementation using Web Crypto API\n     * This will work consistently across modern browsers and match server-side implementations\n     */\n    async sha256(str) {\n        // Convert string to UTF-8 bytes\n        const utf8Bytes = new TextEncoder().encode(str);\n        \n        // Generate SHA-256 hash\n        const hashBuffer = await crypto.subtle.digest('SHA-256', utf8Bytes);\n        \n        // Convert buffer to hex string\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\n        const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\n        \n        return hashHex;\n    }\n    \n    /**\n     * Convert string to UTF-8 byte array\n     */\n    stringToUtf8Bytes(str) {\n        const bytes = [];\n        for (let i = 0; i < str.length; i++) {\n            let code = str.charCodeAt(i);\n            if (code < 0x80) {\n                bytes.push(code);\n            } else if (code < 0x800) {\n                bytes.push(0xC0 | (code >> 6));\n                bytes.push(0x80 | (code & 0x3F));\n            } else if (code < 0x10000) {\n                bytes.push(0xE0 | (code >> 12));\n                bytes.push(0x80 | ((code >> 6) & 0x3F));\n                bytes.push(0x80 | (code & 0x3F));\n            } else {\n                bytes.push(0xF0 | (code >> 18));\n                bytes.push(0x80 | ((code >> 12) & 0x3F));\n                bytes.push(0x80 | ((code >> 6) & 0x3F));\n                bytes.push(0x80 | (code & 0x3F));\n            }\n        }\n        return bytes;\n    }\n    \n    /**\n     * Load and play audio from URL\n     */\n    async playAudioFromUrl(url) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.log(6, '🔊 Creating audio element for playback');\n                \n                const audio = new Audio();\n                \n                audio.onloadeddata = () => {\n                    this.log(7, '✅ Audio loaded successfully');\n                };\n                \n                audio.onended = () => {\n                    this.log(6, '✅ Audio playback finished');\n                    resolve();\n                };\n                \n                audio.onerror = (error) => {\n                    this.log(3, '❌ Audio playback error:', error);\n                    reject(new Error(`Failed to load audio from ${url}`));\n                };\n                \n                audio.oncanplaythrough = () => {\n                    this.log(7, '▶️ Starting audio playback');\n                    audio.play().catch(playError => {\n                        this.log(3, '❌ Audio play() failed:', playError);\n                        reject(playError);\n                    });\n                };\n                \n                // Set source and start loading\n                audio.src = url;\n                audio.load();\n                \n            } catch (error) {\n                this.log(3, '❌ Error setting up audio playback:', error);\n                reject(error);\n            }\n        });\n    }\n\n    /**\n     * Play a portion of audio file as a hint (first 25% of duration)\n     */\n    async playAudioHint(text, language = null, speedMode = 'learning') {\n        return new Promise(async (resolve, reject) => {\n            try {\n                // Use target language if not specified\n                if (!language) {\n                    language = this.targetLanguage;\n                }\n                \n                this.log(5, `🎯 Playing audio hint for: \"${text}\" in ${language}`);\n                \n                // Generate filename using same logic as speakText method\n                const filename = await this.generateAudioFilename(text);\n                const audioUrl = `${this.options.audioPath}${language}/${speedMode}/${filename}`;\n                \n                this.log(6, `🔊 Loading hint audio from: ${audioUrl}`);\n                \n                const audio = new Audio();\n                \n                audio.onloadedmetadata = () => {\n                    this.log(7, `✅ Audio metadata loaded, duration: ${audio.duration}s`);\n                    \n                    // Calculate hint duration based on configurable percentage\n                    const hintDuration = audio.duration * this.options.audioHintDuration;\n                    this.log(7, `🎯 Playing first ${hintDuration.toFixed(2)}s as hint (${(this.options.audioHintDuration * 100)}% of ${audio.duration.toFixed(2)}s)`);\n                    \n                    // Set up a timer to stop playback after configured duration\n                    const stopTimer = setTimeout(() => {\n                        audio.pause();\n                        audio.currentTime = 0;\n                        this.log(7, '🔇 Hint playback completed');\n                        resolve();\n                    }, hintDuration * 1000);\n                    \n                    // Clean up timer if audio ends naturally (shouldn't happen with hints)\n                    audio.onended = () => {\n                        clearTimeout(stopTimer);\n                        this.log(7, '🔇 Audio hint ended naturally');\n                        resolve();\n                    };\n                    \n                    // Start playback\n                    audio.play().catch(playError => {\n                        clearTimeout(stopTimer);\n                        this.log(3, '❌ Audio hint play() failed:', playError);\n                        reject(playError);\n                    });\n                };\n                \n                audio.onerror = (error) => {\n                    this.log(3, '❌ Audio hint error:', error);\n                    reject(new Error(`Failed to load audio hint from ${audioUrl}`));\n                };\n                \n                // Set source and start loading\n                audio.src = audioUrl;\n                audio.load();\n                \n            } catch (error) {\n                this.log(3, '❌ Error setting up audio hint:', error);\n                reject(error);\n            }\n        });\n    }\n\n    /**\n     * Determine if an audio hint should be played based on phrase history and word count\n     */\n    shouldPlayHint(targetText, recentResults) {\n        // Validate inputs\n        if (!recentResults || recentResults.length === 0) {\n            this.log(8, '🎯 No hint: no recent results');\n            return false;\n        }\n        \n        // Check word count - skip hints for short phrases\n        const wordCount = targetText.trim().split(/\\s+/).length;\n        if (wordCount < this.options.audioHintMinWords) {\n            this.log(8, `🎯 No hint: phrase too short (${wordCount} words < ${this.options.audioHintMinWords} minimum)`);\n            return false;\n        }\n        \n        // Count successes (1s) and calculate success rate\n        const successCount = recentResults.filter(r => r === 1).length;\n        const totalAttempts = recentResults.length;\n        const successRate = successCount / totalAttempts;\n        \n        this.log(8, `🎯 Hint check: ${successCount}/${totalAttempts} success rate: ${successRate.toFixed(2)}, words: ${wordCount}`, recentResults);\n        \n        // Only play hint if:\n        // 1. User has had at least some success (successCount > 0)\n        // 2. But success rate is below 50% (struggling)\n        // 3. And has attempted the phrase at least twice (to have meaningful history)\n        const hasAttemptedMultipleTimes = totalAttempts >= 2;\n        const hasSomeSuccess = successCount > 0;\n        const isStruggling = successRate < 0.5;\n        \n        const shouldHint = hasAttemptedMultipleTimes && hasSomeSuccess && isStruggling;\n        \n        this.log(8, `🎯 Hint decision: attempts=${totalAttempts} >= 2: ${hasAttemptedMultipleTimes}, successes=${successCount} > 0: ${hasSomeSuccess}, struggling=${successRate.toFixed(2)} < 0.5: ${isStruggling}`);\n        this.log(8, `🎯 Should play hint: ${shouldHint}`);\n        \n        return shouldHint;\n    }\n\n    \n    // ========== LEARNING SESSION MANAGEMENT ==========\n    /**\n     * Start a learning session with persistent microphone access\n     * Call this once when learning starts to avoid repeated mic requests\n     */\n    async startLearningSession() {\n        if (this.isLearningSessionActive) {\n            this.log(6, '🎓 Learning session already active');\n            return;\n        }\n        \n        this.log(5, '🎓 Starting learning session with persistent microphone');\n        await this.startRecording();\n        this.isLearningSessionActive = true;\n    }\n    \n    /**\n     * Stop the learning session and release microphone access\n     * Call this when the user finishes learning or closes the app\n     */\n    stopLearningSession() {\n        if (!this.isLearningSessionActive) {\n            this.log(6, '🎓 No learning session to stop');\n            return;\n        }\n        \n        this.log(5, '🎓 Stopping learning session and releasing microphone');\n        this.stopRecording();\n        this.isLearningSessionActive = false;\n    }\n    \n    /**\n     * Check if a learning session is currently active\n     */\n    isSessionActive() {\n        return this.isLearningSessionActive;\n    }\n    \n    // ========== AUDIO RECORDING ==========\n    async startRecording() {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ \n                audio: {\n                    sampleRate: 24000,\n                    channelCount: 1,\n                    echoCancellation: true,\n                    noiseSuppression: true\n                } \n            });\n            \n            this.currentAudioStream = stream;\n            this.audioContext = new AudioContext({ sampleRate: 24000 });\n            const source = this.audioContext.createMediaStreamSource(stream);\n            \n            this.audioProcessor = this.audioContext.createScriptProcessor(1024, 1, 1);\n            this.audioProcessor.onaudioprocess = (event) => {\n                if (this.ws && this.ws.readyState === WebSocket.OPEN && this.isListening) {\n                    const audioData = event.inputBuffer.getChannelData(0);\n                    const pcm16 = new Int16Array(audioData.length);\n                    \n                    for (let i = 0; i < audioData.length; i++) {\n                        pcm16[i] = Math.max(-32768, Math.min(32767, audioData[i] * 32768));\n                    }\n                    \n                    const uint8Array = new Uint8Array(pcm16.buffer);\n                    const base64Audio = btoa(String.fromCharCode.apply(null, uint8Array));\n                    \n                    this.ws.send(JSON.stringify({\n                        type: 'input_audio_buffer.append',\n                        audio: base64Audio\n                    }));\n                }\n            };\n            \n            source.connect(this.audioProcessor);\n            this.audioProcessor.connect(this.audioContext.destination);\n            \n            this.isListening = true;\n            this.log(5, '🎤 Started recording and listening');\n            \n        } catch (error) {\n            this.log(2, 'Error starting recording:', error);\n            this.showError('Could not access microphone: ' + error.message);\n            throw error;\n        }\n    }\n    \n    pauseListening() {\n        this.isListening = false;\n        this.log(6, '⏸️ Paused listening (microphone still active)');\n    }\n    \n    resumeListening() {\n        this.isListening = true;\n        this.log(6, '▶️ Resumed listening');\n    }\n    \n    stopRecording() {\n        this.isListening = false;\n        \n        if (this.currentAudioStream) {\n            this.currentAudioStream.getTracks().forEach(track => track.stop());\n            this.currentAudioStream = null;\n        }\n        \n        if (this.audioProcessor) {\n            this.audioProcessor.disconnect();\n            this.audioProcessor = null;\n        }\n        \n        if (this.audioContext && this.audioContext.state !== 'closed') {\n            this.audioContext.close();\n            this.audioContext = null;\n        }\n        \n        this.log(5, '🛑 Stopped recording completely');\n    }\n    \n    // Simple language detection based on known source/target languages\n    detectLanguage(text) {\n        // This is a simple heuristic - in a real app you might use a more sophisticated approach\n        // For now, assume shorter phrases or common English words are source language\n        const englishWords = ['the', 'a', 'an', 'is', 'are', 'was', 'were', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'of', 'with', 'by'];\n        const words = text.toLowerCase().split(/\\s+/);\n        const englishWordCount = words.filter(word => englishWords.includes(word)).length;\n        \n        // If more than 20% are common English words, assume it's the source language\n        if (englishWordCount / words.length > 0.2) {\n            return this.sourceLanguage;\n        }\n        \n        // Otherwise assume target language\n        return this.targetLanguage;\n    }\n    \n    // ========== UI HELPERS ==========\n    showStatus(message) {\n        this.log(7, '📢 Status:', message);\n        \n        // Call status callback if provided\n        if (this.options.statusCallback) {\n            this.options.statusCallback(message);\n        }\n        \n        // Update output element if provided\n        if (this.outputElement) {\n            this.outputElement.textContent = message;\n        }\n    }\n    \n    showError(message) {\n        this.log(2, '❌ Error:', message);\n        // Could emit an event or call a callback here\n        if (this.outputElement) {\n            this.outputElement.textContent = 'Error: ' + message;\n            this.outputElement.style.color = 'red';\n            setTimeout(() => {\n                this.outputElement.style.color = '';\n            }, 3000);\n        }\n    }\n    \n    showScore(score) {\n        this.log(4, '📊 Score:', score);\n        // Return score info for UI to handle\n        return {\n            score: score,\n            message: this.getScoreMessage(score),\n            emoji: this.getScoreEmoji(score)\n        };\n    }\n    \n    getScoreMessage(score) {\n        if (score >= 8) return 'Excellent work!';\n        if (score >= 6) return 'Good job!';\n        return 'Keep practicing!';\n    }\n    \n    getScoreEmoji(score) {\n        if (score >= 8) return '🎉';\n        if (score >= 6) return '👍';\n        return '📚';\n    }\n    \n    // ========== OPTIONS MANAGEMENT ==========\n    updateOptions(newOptions) {\n        this.log(5, '🔧 Updating tutor options:', newOptions);\n        \n        // Merge new options with existing ones\n        this.options = this.mergeOptions(this.options, newOptions);\n        \n        this.log(6, '✅ Options updated:', this.options);\n        return this.options;\n    }\n    \n    getOptions() {\n        return { ...this.options }; // Return a copy to prevent external modification\n    }\n    \n    // ========== MAIN TEST FUNCTION ==========\n    async test(sourceText, targetText, expectedPronunciation = '', recentResults = [], waitTime = 10) {\n        try {\n            this.showStatus('Getting session key...');\n            const sessionKey = await this.getSessionKey();\n            if (!sessionKey) {\n                return {\n                    score: 0,\n                    commentary: 'Failed to get session key',\n                    stop: false\n                };\n            }\n            \n            this.showStatus('Connecting to ChatGPT...');\n            this.log(4, '🔗 Creating new ChatGPT WebSocket connection for testing');\n            this.log(6, '🎚️ Using VAD settings:', this.options.vad);\n            this.log(6, '🎯 Feedback threshold:', this.options.feedbackThreshold);\n            \n            // Connect to ChatGPT Realtime API\n            this.ws = new WebSocket(\n                'wss://api.openai.com/v1/realtime?model=gpt-4o-mini-realtime-preview&openai-beta=realtime%3Dv1',\n                [`realtime`, `openai-insecure-api-key.${sessionKey}`, \"openai-beta.realtime-v1\"]\n            );\n            \n            return new Promise((resolve) => {\n                let hasResponse = false;\n                let silenceTimer;\n                \n                this.ws.onopen = async () => {\n                    this.log(5, '✅ Connected to ChatGPT Realtime API');\n                    \n                    // Prepare the prompt for ChatGPT\n                    const prompt = `You are an expert phonetician. Listen to the user's speech and provide ONLY a English \"phrasebook respelling\" transcription of what they said. Do not include any explanations, commentary, or additional text except for these special cases - if the user says any of these, return JUST the standardized word instead of a transcription:\n- If they say \"stop\", \"pause\", \"that's enough\", \"quit\", \"finish\", \"done\" or similar: return \"stop\"\n- If they say \"again\", \"play it again\", \"repeat\", \"one more time\" or similar: return \"again\" \n- If they say \"skip\", \"next\", \"pass\", \"I don't know\", \"I give up\" or similar: return \"skip\"\n- If they remain completely silent or you hear nothing: return \"silent\"\n\nPlease provide the phonetic transcription using English phrasebook respelling using ALL CAPS to show where the speaker puts emphasis using the following phonemes:\nah, eh, ay, ee, oh, oo, aw, ew, ur, uh, ow, ahn, ehn, ohn, uhn, p, b, t, d, k, g, f, v, s, z, m, n, l, r, rr, sh, zh, ch, j, ny, ly, h, th, w, y\nThe user is speaking in ${this.targetLanguage}\n`;\n\n                    if (this.options.loggingVerbosity >= 8) {\n                        this.log(8, '📤 Sending prompt to ChatGPT:');\n                        this.log(8, '------- PROMPT START -------');\n                        this.log(8, prompt);\n                        this.log(8, '------- PROMPT END -------');\n                    }\n                    \n                    // Configure session with dynamic language instructions and custom VAD\n                    this.ws.send(JSON.stringify({\n                        type: 'session.update',\n                        session: {\n                            modalities: ['text'],\n                            instructions: prompt,\n                            input_audio_format: 'pcm16',\n                            input_audio_transcription: {\n                                model: 'whisper-1'\n                            },\n                            turn_detection: {\n                                type: 'server_vad',\n                                threshold: this.options.vad.threshold,\n                                prefix_padding_ms: this.options.vad.prefixPaddingMs,\n                                silence_duration_ms: this.options.vad.silenceDurationMs\n                            }\n                        }\n                    }));\n                    \n                    // Ensure we have an active learning session\n                    if (!this.isLearningSessionActive) {\n                        this.log(2, '❌ test() called without active learning session');\n                        return {\n                            score: 0,\n                            commentary: 'No active learning session. Please start a learning session first.',\n                            stop: true\n                        };\n                    }\n                    \n                    this.log(6, '🎤 Using persistent microphone session');\n                    \n                    // Check if this is a brand new phrase (zero correct answers in history)\n                    const correctAnswers = recentResults.reduce((sum, result) => sum + result, 0);\n                    const isNewPhrase = correctAnswers === 0;\n                    if (isNewPhrase ) {\n                        // For completely new phrases, introduce them properly\n                        this.showStatus(`🎵 New phrase! Listen to this ${this.sourceLanguage} phrase...`);\n                        this.pauseListening();\n                        await this.speakText(sourceText, this.sourceLanguage);\n                        \n                        this.showStatus(`🎵 Now here's how to say it in ${this.targetLanguage}...`);\n                        await this.speakText(targetText, this.targetLanguage);\n                        // repeat it\n                        // Pause for 1 second (1000 milliseconds)\n                        await new Promise(resolve => setTimeout(resolve, 1000));\n\n                        await this.speakText(targetText, this.targetLanguage);\n                        \n                        this.showStatus(`🎤 Now you try! Say it in ${this.targetLanguage}...`);\n                        \n                        // Play notification bleep before resuming listening\n                        await this.playNotificationBleep();\n                        this.resumeListening();\n                    } else {\n                        // Regular flow for phrases with some history\n                        this.showStatus(`🎵 Listen to this ${this.sourceLanguage} phrase...`);\n                        this.pauseListening();\n                        await this.speakText(sourceText, this.sourceLanguage);\n                        \n                        // Check if we should play an audio hint\n                        if (this.options.enableAudioHints && this.shouldPlayHint(targetText, recentResults)) {\n                            try {\n                                this.showStatus(\"🎯 Here is a hint for you...\");\n                                this.log(6, '🎯 Playing audio hint for struggling phrase');\n                                await this.playAudioHint(targetText);\n                                await new Promise(resolve => setTimeout(resolve, 500)); // Brief pause after hint\n                            } catch (error) {\n                                this.log(4, '⚠️ Audio hint failed:', error);\n                                // Continue with normal flow even if hint fails\n                            }\n                        }\n                        \n                        this.showStatus(`🎤 Now say it in ${this.targetLanguage}...`);\n                        \n                        // Play notification bleep before resuming listening\n                        await this.playNotificationBleep();\n                        this.resumeListening();\n                    }\n                    \n                    // Set silence timer\n                    silenceTimer = setTimeout(() => {\n                        if (!hasResponse) {\n                            this.log(4, '⏰ Silence timeout reached');\n                            this.cleanup();\n                            resolve({\n                                score: 0,\n                                commentary: 'No response detected within the time limit. Please try speaking closer to the microphone or check your audio settings.',\n                                stop: false\n                            });\n                        }\n                    }, waitTime * 1000);\n                };\n                \n                this.ws.onmessage = async (event) => {\n                    const message = JSON.parse(event.data);\n                    this.log(8, '📨 Received message:', message.type);\n                    \n                    // Debug: Log full message for important types\n                    if (['response.done', 'error', 'response.text.delta'].includes(message.type)) {\n                        this.log(9, '📋 Full message details:', message);\n                    }\n                    \n                    if (message.type === 'session.updated') {\n                        this.log(6, '✅ Session configured successfully');\n                    }\n                    \n                    if (message.type === 'input_audio_buffer.speech_started') {\n                        this.log(6, '🎤 Speech detected, user started speaking');\n                        clearTimeout(silenceTimer);\n                    }\n                    \n                    if (message.type === 'input_audio_buffer.speech_stopped') {\n                        this.log(6, '🔇 Speech stopped, processing...');\n                    }\n                    \n                    if (message.type === 'response.done') {\n                        this.log(5, '✅ Response complete from ChatGPT');\n                        hasResponse = true;\n                        clearTimeout(silenceTimer);\n                        \n                        // Extract response from ChatGPT\n                        const response = message.response;\n                        let result = {\n                            score: 0,\n                            commentary: 'Unable to process response',\n                            stop: false\n                        };\n                        \n                        this.log(6, '🔍 Processing ChatGPT response...');\n                        this.log(9, '📥 Raw response object:', JSON.stringify(response, null, 2));\n                        \n                        if (response.output && response.output.length > 0) {\n                            for (const output of response.output) {\n                                this.log(8, '📄 Processing output item:', output);\n                                if (output.content && output.content.length > 0) {\n                                    for (const content of output.content) {\n                                        if (content.type === 'text' && content.text) {\n                                            if (this.options.loggingVerbosity >= 7) {\n                                                this.log(7, '📥 Raw ChatGPT response text:');\n                                                this.log(7, '------- RESPONSE START -------');\n                                                this.log(7, content.text);\n                                                this.log(7, '------- RESPONSE END -------');\n                                            }\n                                            \n                                            // ChatGPT now returns phonetic transcription or standardized special words\n                                            const response = content.text.trim();\n                                            this.log(6, '🎤 ChatGPT response:', response);\n                                            \n                                            // Check for standardized special cases\n                                            if (response === 'stop') {\n                                                result = {\n                                                    score: 0,\n                                                    heardPronunciation: response,\n                                                    commentary: 'User requested to stop',\n                                                    stop: true\n                                                };\n                                                this.log(5, '🛑 Stop command detected');\n                                            }\n                                            else if (response === 'again') {\n                                                result = {\n                                                    score: 0,\n                                                    heardPronunciation: response,\n                                                    commentary: \"They'll hear it again\",\n                                                    stop: false\n                                                };\n                                                this.log(5, '🔄 Repeat request detected');\n                                            }\n                                            else if (response === 'skip') {\n                                                result = {\n                                                    score: 1,\n                                                    heardPronunciation: response,\n                                                    commentary: 'Try your best! Practice makes perfect.',\n                                                    stop: false\n                                                };\n                                                this.log(5, '🤷 Skip/don\\'t know response detected');\n                                            }\n                                            else if (response === 'silent') {\n                                                result = {\n                                                    score: 0,\n                                                    heardPronunciation: '',\n                                                    commentary: 'No response detected',\n                                                    stop: false\n                                                };\n                                                this.log(5, '🔇 Silent response detected');\n                                            }\n                                            // Normal pronunciation scoring\n                                            else if (response.length > 0) {\n                                                let scoringResult;\n                                                \n                                                // Handle both string and array pronunciations\n                                                if (Array.isArray(expectedPronunciation)) {\n                                                    // Array of pronunciation options - test against all and take the best score\n                                                    this.log(6, `🎯 Testing against ${expectedPronunciation.length} pronunciation options:`, expectedPronunciation);\n                                                    \n                                                    let bestResult = null;\n                                                    let bestScore = -1;\n                                                    \n                                                    for (let i = 0; i < expectedPronunciation.length; i++) {\n                                                        const option = expectedPronunciation[i];\n                                                        const testResult = this.pronunciationScorer.score(option, response);\n                                                        this.log(7, `📊 Option ${i + 1} \"${option}\": ${testResult.finalScore.toFixed(1)}/10`);\n                                                        \n                                                        if (testResult.finalScore > bestScore) {\n                                                            bestScore = testResult.finalScore;\n                                                            bestResult = testResult;\n                                                            bestResult.matchedPronunciation = option; // Track which option matched best\n                                                        }\n                                                    }\n                                                    \n                                                    scoringResult = bestResult;\n                                                    this.log(6, `🏆 Best match: \"${scoringResult.matchedPronunciation}\" with score ${scoringResult.finalScore.toFixed(1)}/10`);\n                                                } else {\n                                                    // Single string pronunciation (traditional behavior)\n                                                    scoringResult = this.pronunciationScorer.score(expectedPronunciation, response);\n                                                    this.log(6, `📊 Single pronunciation scoring: ${scoringResult.finalScore.toFixed(1)}/10`);\n                                                }\n                                                \n                                                result = {\n                                                    score: scoringResult.finalScore,\n                                                    targetPronunciation: expectedPronunciation,\n                                                    heardPronunciation: response,\n                                                    commentary: `Score: ${scoringResult.finalScore.toFixed(1)}/10 (${scoringResult.grade})`,\n                                                    stop: false,\n                                                    matchedPronunciation: scoringResult.matchedPronunciation // Include which option was matched (only for arrays)\n                                                };\n                                                this.log(5, '📊 Scored pronunciation:', result);\n                                            }\n                                            // Empty response fallback\n                                            else {\n                                                result = {\n                                                    score: 0,\n                                                    heardPronunciation: '',\n                                                    commentary: 'No response received',\n                                                    stop: false\n                                                };\n                                                this.log(5, '🔇 Empty response');\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        } else {\n                            this.log(3, '⚠️ No output found in ChatGPT response');\n                        }\n                        \n                        // If user requested to stop, clean up and return immediately\n                        if (result.stop) {\n                            this.log(4, '🛑 User requested to stop');\n                            this.cleanup();\n                            resolve(result);\n                            return;\n                        }\n                        \n                        // Play audio feedback based on score\n                        if (result.score > 0) {\n                            // Determine pass/fail based on pass threshold (not feedback threshold)\n                            const passed = result.score >= this.options.passThreshold;\n                            this.log(6, `🎵 Playing ${passed ? 'success' : 'failure'} bleep for score ${result.score} (pass threshold: ${this.options.passThreshold})`);\n                            \n                            // Play appropriate feedback bleep (don't await to avoid blocking)\n                            if (passed) {\n                                this.playSuccessBleep().catch(err => this.log(4, 'Success bleep failed:', err));\n                            } else {\n                                this.playFailureBleep().catch(err => this.log(4, 'Failure bleep failed:', err));\n                            }\n                        }\n                        \n                        // Show score feedback and potentially play target pronunciation\n                        this.showStatus('Test complete!');\n                        const scoreInfo = this.showScore(result.score);\n                        \n                        // Speak target language if score is below or equal to configured threshold\n                        if (result.score > 0 && result.score <= this.options.feedbackThreshold) {\n                            this.log(5, `📢 Score ${result.score} below threshold ${this.options.feedbackThreshold}, speaking ${this.targetLanguage} target phrase...`);\n                            \n                            const wasListening = this.isListening;\n                            if (wasListening) this.pauseListening();\n                            \n                            // Show what was heard before playing the correct pronunciation\n                            if (result.heardPronunciation && result.heardPronunciation.length > 0) {\n                                this.showStatus(`👂 I heard you say: \"${result.heardPronunciation}\"`);\n                                this.log(6, `👂 Displaying heard pronunciation: \"${result.heardPronunciation}\"`);\n                            }\n                            \n                            // For very poor scores (< 3), repeat the phrase 3 times\n                            if (result.score < 3) {\n                                this.log(4, `🔁 Score ${result.score} is very low, repeating target phrase 3 times for better learning`);\n                                this.showStatus(`🎵 Score ${result.score}/10 - Here's the correct ${this.targetLanguage} pronunciation (3 times)...`);\n                                \n                                for (let i = 1; i <= 3; i++) {\n                                    this.log(6, `🎵 Playing repetition ${i}/3`);\n                                    await this.speakText(targetText, this.targetLanguage);\n                                    \n                                    // Short pause between repetitions (except after the last one)\n                                    if (i < 3) {\n                                        await new Promise(resolve => setTimeout(resolve, 800));\n                                    }\n                                }\n                            } else {\n                                // Normal single playback for scores 3-6 (below threshold but not terrible)\n                                this.showStatus(`🎵 Here's the correct ${this.targetLanguage} pronunciation...`);\n                                await this.speakText(targetText, this.targetLanguage);\n                            }\n                            \n                            if (wasListening) this.resumeListening();\n                        }\n                        \n                        this.log(4, '📊 Final result returned:', result);\n                        this.cleanup();\n                        resolve(result);\n                    }\n                    \n                    if (message.type === 'error') {\n                        this.log(2, '❌ ChatGPT WebSocket error:', message.error);\n                        this.log(8, '💥 Full error details:', JSON.stringify(message, null, 2));\n                        this.showError('Error: ' + message.error.message);\n                        this.cleanup();\n                        resolve({\n                            score: 0,\n                            commentary: `Error occurred: ${message.error.message}`,\n                            stop: false\n                        });\n                    }\n                };\n                \n                this.ws.onerror = (error) => {\n                    this.log(2, '❌ WebSocket connection error:', error);\n                    this.showError('Connection error occurred');\n                    this.cleanup();\n                    resolve({\n                        score: 0,\n                        commentary: 'Connection error occurred. Please check your internet connection and try again.',\n                        stop: false\n                    });\n                };\n            });\n            \n        } catch (error) {\n            this.log(1, '💥 Error in test method:', error);\n            this.log(8, '🔍 Error stack trace:', error.stack);\n            this.showError('Error: ' + error.message);\n            return {\n                score: 0,\n                commentary: `Error occurred: ${error.message}`,\n                stop: false\n            };\n        }\n    }\n    \n    cleanup() {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            this.log(5, '🔌 Closing ChatGPT WebSocket connection');\n            this.ws.close();\n            this.ws = null;\n        }\n        \n        // Only stop recording if we're not in a persistent learning session\n        if (!this.isLearningSessionActive) {\n            this.log(6, '🎤 Stopping temporary recording session');\n            this.stopRecording();\n        } else {\n            this.log(6, '🎤 Keeping persistent microphone session active');\n        }\n    }\n    \n    // ========== LIFECYCLE MANAGEMENT ==========\n    destroy() {\n        this.log(4, '🧹 Destroying LanguageTutor instance');\n        this.cleanup();\n        this.stopKeyRefreshTimer();\n    }\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","// settingsStore.js - Centralised settings management with localStorage persistence\nimport { writable } from 'svelte/store';\n\n// Default settings\nconst defaultSettings = {\n  // Language Configuration\n  nativeLanguage: 'English',\n  learningLanguage: 'Italian',\n  \n  // Display Options\n  showExpectedOutput: 'always', // 'always', 'never', 'struggling'\n  showCategory: true,\n  showFeedback: true,\n  showUpcomingQueue: false,\n  enableAudioHints: false,\n  \n  // Audio & Timing Controls\n  translationThreshold: 7,\n  pauseBetweenTests: 3,\n  pauseWhenStruggling: 5,\n  \n  // Binary Algorithm Controls\n  passThreshold: 7,\n  repetitivenessFactor: 5,\n  \n  // Developer Settings\n  loggingVerbosity: 5,\n  showDeveloperSettings: false,\n  \n  // Category Preferences\n  enabledCategories: {}\n};\n\nfunction createSettingsStore() {\n  const { subscribe, set, update } = writable(defaultSettings);\n  \n  return {\n    subscribe,\n    \n    // Load settings from localStorage\n    load: () => {\n      if (typeof localStorage === 'undefined') return;\n      \n      const saved = localStorage.getItem('languageTutorSettings');\n      if (saved) {\n        try {\n          const parsedSettings = JSON.parse(saved);\n          update(current => ({ ...current, ...parsedSettings }));\n          console.log('✅ Settings loaded from localStorage');\n        } catch (error) {\n          console.error('❌ Failed to parse saved settings:', error);\n        }\n      }\n    },\n    \n    // Save settings to localStorage\n    save: (settings) => {\n      if (typeof localStorage === 'undefined') return;\n      \n      try {\n        localStorage.setItem('languageTutorSettings', JSON.stringify(settings));\n        console.log('💾 Settings saved to localStorage');\n      } catch (error) {\n        console.error('❌ Failed to save settings:', error);\n      }\n    },\n    \n    // Update specific setting\n    updateSetting: (key, value) => {\n      update(current => {\n        const newSettings = { ...current, [key]: value };\n        \n        // Auto-save to localStorage\n        if (typeof localStorage !== 'undefined') {\n          try {\n            localStorage.setItem('languageTutorSettings', JSON.stringify(newSettings));\n          } catch (error) {\n            console.error('❌ Failed to save setting:', error);\n          }\n        }\n        \n        return newSettings;\n      });\n    },\n    \n    // Update multiple settings at once\n    updateSettings: (updates) => {\n      update(current => {\n        const newSettings = { ...current, ...updates };\n        \n        // Auto-save to localStorage\n        if (typeof localStorage !== 'undefined') {\n          try {\n            localStorage.setItem('languageTutorSettings', JSON.stringify(newSettings));\n          } catch (error) {\n            console.error('❌ Failed to save settings:', error);\n          }\n        }\n        \n        return newSettings;\n      });\n    },\n    \n    // Reset to defaults\n    reset: () => {\n      set(defaultSettings);\n      if (typeof localStorage !== 'undefined') {\n        localStorage.removeItem('languageTutorSettings');\n      }\n    }\n  };\n}\n\nexport const settings = createSettingsStore();\n","// autoSave.js - Reusable Svelte action for auto-saving settings to localStorage\n\nexport function autoSave(node, settingName) {\n  function handleChange(event) {\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    \n    if (settingName && typeof localStorage !== 'undefined') {\n      try {\n        const saved = localStorage.getItem('languageTutorSettings');\n        const settings = saved ? JSON.parse(saved) : {};\n        settings[settingName] = value;\n        localStorage.setItem('languageTutorSettings', JSON.stringify(settings));\n        console.log(`💾 Saved ${settingName}:`, value);\n      } catch (error) {\n        console.error(`Failed to save ${settingName}:`, error);\n      }\n    }\n  }\n  \n  node.addEventListener('change', handleChange);\n  \n  return {\n    destroy() {\n      node.removeEventListener('change', handleChange);\n    }\n  };\n}","<!-- LanguageSettings.svelte -->\n<script>\n  import { createEventDispatcher } from 'svelte';\n  import { autoSave } from './autoSave.js';\n  \n  export let nativeLanguage;\n  export let learningLanguage;\n  export let nativeLanguages;\n  export let learningLanguages;\n  export let loggingVerbosity = 5;\n  \n  const dispatch = createEventDispatcher();\n  \n  function log(level, ...args) {\n    if (loggingVerbosity >= level) {\n      console.log(...args);\n    }\n  }\n  \n</script>\n\n<h3 class=\"section-header\">Language Selection</h3>\n<div class=\"language-grid\">\n  <div class=\"form-group\">\n    <label class=\"form-label\">Native Language</label>\n    <select \n      class=\"form-select\" \n      bind:value={nativeLanguage}\n      use:autoSave={\"nativeLanguage\"}\n    >\n      {#each nativeLanguages as lang}\n        <option value={lang}>\n          {lang}\n        </option>\n      {/each}\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"form-label\">Learning Language</label>\n    <select \n      class=\"form-select\" \n      bind:value={learningLanguage}\n      use:autoSave={\"learningLanguage\"}\n    >\n      {#each learningLanguages as lang}\n        <option value={lang}>\n          {lang}\n        </option>\n      {/each}\n    </select>\n  </div>\n</div>\n\n","<!-- DisplaySettings.svelte -->\n<script>\n  import { createEventDispatcher } from 'svelte';\n  import { autoSave } from './autoSave.js';\n  \n  export let showExpectedOutput;\n  export let showCategory;\n  export let showFeedback;\n  export let showUpcomingQueue;\n  export let enableAudioHints;\n  export let translationThreshold;\n  export let pauseBetweenTests;\n  export let pauseWhenStruggling;\n  \n  const dispatch = createEventDispatcher();\n  \n  function updateQueue() {\n    dispatch('updateQueue');\n  }\n  \n</script>\n\n<h3 class=\"section-header\">Display Options</h3>\n<div class=\"display-options-section\">\n  <div class=\"display-options-list\">\n    <label class=\"category-item\">\n      <input \n        type=\"checkbox\" \n        class=\"category-checkbox\"\n        bind:checked={showCategory}\n        use:autoSave={\"showCategory\"}\n      />\n      <span class=\"category-label\">Display Category</span>\n    </label>\n    <label class=\"category-item\">\n      <input \n        type=\"checkbox\" \n        class=\"category-checkbox\"\n        bind:checked={showFeedback}\n        use:autoSave={\"showFeedback\"}\n      />\n      <span class=\"category-label\">Display Feedback</span>\n    </label>\n    <label class=\"category-item\">\n      <input \n        type=\"checkbox\" \n        class=\"category-checkbox\"\n        bind:checked={showUpcomingQueue}\n        on:change={updateQueue}\n        use:autoSave={\"showUpcomingQueue\"}\n      />\n      <span class=\"category-label\">Show Upcoming Queue</span>\n    </label>\n    <label class=\"category-item\">\n      <input \n        type=\"checkbox\" \n        class=\"category-checkbox\"\n        bind:checked={enableAudioHints}\n        use:autoSave={\"enableAudioHints\"}\n      />\n      <span class=\"category-label\">Enable Audio Hints</span>\n    </label>\n  </div>\n  \n  <!-- Expected Output Display Options -->\n  <div class=\"form-group expected-translation-section\">\n    <label class=\"form-label\" for=\"expected-output-select\">Show Expected Translation</label>\n    <select \n      id=\"expected-output-select\"\n      class=\"form-select\" \n      bind:value={showExpectedOutput}\n      use:autoSave={\"showExpectedOutput\"}\n    >\n      <option value=\"always\">Always</option>\n      <option value=\"struggling\">Only when struggling</option>\n      <option value=\"never\">Never</option>\n    </select>\n    <p class=\"setting-description\">\n      {#if showExpectedOutput === 'always'}\n        Expected translation is always shown\n      {:else if showExpectedOutput === 'never'}\n        Expected translation is never shown - test your memory!\n      {:else if showExpectedOutput === 'struggling'}\n        Expected translation shown only for phrases with success rate below 25%\n      {/if}\n    </p>\n  </div>\n  \n  <!-- Translation Threshold Setting -->\n  <div class=\"threshold-setting\">\n    <label class=\"form-label\">\n      Translation Repetition Threshold: {translationThreshold}\n      <span class=\"threshold-description\">\n        {translationThreshold === 0 ? 'Never repeat translation' : \n         translationThreshold === 10 ? 'Always repeat translation' : \n         `Repeat translation for scores below ${translationThreshold}`}\n      </span>\n    </label>\n    <input \n      type=\"range\" \n      min=\"0\" \n      max=\"10\" \n      step=\"1\"\n      bind:value={translationThreshold}\n      class=\"threshold-slider\"\n      use:autoSave={\"translationThreshold\"}\n    />\n    <div class=\"threshold-labels\">\n      <span>Never (0)</span>\n      <span>Default (7)</span>\n      <span>Always (10)</span>\n    </div>\n  </div>\n  \n  <!-- Pause Between Tests Setting -->\n  <div class=\"threshold-setting\">\n    <label class=\"form-label\">\n      Pause Between Tests: {pauseBetweenTests}s\n      <span class=\"threshold-description\">\n        {pauseBetweenTests <= 1 ? 'Quick - brief pause for score review' :\n         pauseBetweenTests >= 5 ? 'Slow - plenty of time to read feedback' :\n         'Balanced - comfortable time to review your score'}\n      </span>\n    </label>\n    <input \n      type=\"range\" \n      min=\"0.5\" \n      max=\"10\" \n      step=\"0.5\"\n      bind:value={pauseBetweenTests}\n      class=\"threshold-slider\"\n      use:autoSave={\"pauseBetweenTests\"}\n    />\n    <div class=\"threshold-labels\">\n      <span>Quick (0.5s)</span>\n      <span>Default (3s)</span>\n      <span>Slow (10s)</span>\n    </div>\n  </div>\n  \n  <!-- Pause When Struggling Setting -->\n  {#if showExpectedOutput === 'struggling'}\n    <div class=\"threshold-setting\">\n    <label class=\"form-label\">\n      Pause When Struggling: {pauseWhenStruggling}s\n      <span class=\"threshold-description\">\n        Extra pause time for phrases with low success rate (&lt;25%) or poor scores (&lt;4)\n      </span>\n    </label>\n    <input \n      type=\"range\" \n      min=\"0.5\" \n      max=\"15\" \n      step=\"0.5\"\n      bind:value={pauseWhenStruggling}\n      class=\"threshold-slider\"\n      use:autoSave={\"pauseWhenStruggling\"}\n    />\n    <div class=\"threshold-labels\">\n      <span>Quick (0.5s)</span>\n      <span>Default (5s)</span>\n      <span>Extended (15s)</span>\n    </div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  /* Component-specific styles for DisplaySettings */\n  .display-options-list {\n    margin-top: 0.5rem;\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 0.5rem;\n  }\n  \n  @media (min-width: 640px) {\n    .display-options-list {\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n  \n  /* Fieldset and legend styling */\n  fieldset {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n  \n  legend {\n    padding: 0;\n    margin-bottom: 0.5rem;\n  }\n  \n  .expected-translation-section {\n    margin-top: 1.5rem;\n    margin-bottom: 1.5rem;\n  }\n</style>\n","<!-- AlgorithmSettings.svelte -->\n<script>\n  import { autoSave } from './autoSave.js';\n  \n  export let passThreshold;\n  export let repetitivenessFactor;\n</script>\n\n<div class=\"algorithm-settings\">\n  <h3 class=\"section-header\">Learning Algorithm</h3>\n  <div class=\"threshold-setting\">\n    <label class=\"form-label\">\n      Pass Threshold: {passThreshold}\n      <span class=\"threshold-description\">\n        Scores {passThreshold} and above are considered a pass\n      </span>\n    </label>\n    <input \n      type=\"range\" \n      min=\"1\" \n      max=\"10\" \n      step=\"1\"\n      bind:value={passThreshold}\n      class=\"threshold-slider\"\n      use:autoSave={\"passThreshold\"}\n    />\n    <div class=\"threshold-labels\">\n      <span>Easy (1)</span>\n      <span>Default (7)</span>\n      <span>Hard (10)</span>\n    </div>\n  </div>\n  \n  <div class=\"threshold-setting\">\n    <label class=\"form-label\">\n      Test Repetitiveness: {repetitivenessFactor}\n      <span class=\"threshold-description\">\n        {repetitivenessFactor <= 3 ? 'Less repetitive - tests advance quickly' :\n         repetitivenessFactor >= 8 ? 'Very repetitive - tests stay at front longer' :\n         'Balanced repetition'}\n      </span>\n    </label>\n    <input \n      type=\"range\" \n      min=\"1\" \n      max=\"10\" \n      step=\"1\"\n      bind:value={repetitivenessFactor}\n      class=\"threshold-slider\"\n      use:autoSave={\"repetitivenessFactor\"}\n    />\n    <div class=\"threshold-labels\">\n      <span>Less (1)</span>\n      <span>Default (5)</span>\n      <span>More (10)</span>\n    </div>\n  </div>\n</div>\n\n<style>\n  /* Component-specific styles for AlgorithmSettings */\n  .algorithm-settings {\n    margin-top: 1rem;\n  }\n</style>\n","<!-- CategoryManager.svelte -->\n<script>\n  import { createEventDispatcher } from 'svelte';\n  import { settings } from './settingsStore.js';\n  \n  export let categories;\n  export let enabledCategories;\n  export let loggingVerbosity = 5;\n  \n  const dispatch = createEventDispatcher();\n  \n  function log(level, ...args) {\n    if (loggingVerbosity >= level) {\n      console.log(...args);\n    }\n  }\n  \n  function handleCategoryToggle(category, enabled) {\n    log(6, `🔘 Category toggle: ${category} → ${enabled}`);\n    \n    // Update the bound enabledCategories object directly\n    enabledCategories[category] = enabled;\n    // Force reactivity by creating new object reference\n    enabledCategories = { ...enabledCategories };\n    \n    // Save to localStorage (matching the autoSave pattern)\n    if (typeof localStorage !== 'undefined') {\n      try {\n        const saved = localStorage.getItem('languageTutorSettings');\n        const settings = saved ? JSON.parse(saved) : {};\n        if (!settings.enabledCategories) settings.enabledCategories = {};\n        settings.enabledCategories[category] = enabled;\n        localStorage.setItem('languageTutorSettings', JSON.stringify(settings));\n        console.log(`💾 Saved category ${category}:`, enabled);\n      } catch (error) {\n        console.error(`Failed to save category ${category}:`, error);\n      }\n    }\n    \n    // Dispatch change for LearningQueue updates only\n    dispatch('categoryChange', { category, enabled });\n  }\n</script>\n\n{#if categories.length > 0}\n  <h3 class=\"section-header\">Learning Categories</h3>\n  <div class=\"categories-section\">\n    <div class=\"categories-list\">\n      {#each categories as category}\n        <label class=\"category-item\">\n          <input \n            type=\"checkbox\" \n            class=\"category-checkbox\"\n            checked={enabledCategories[category] || false}\n            on:change={(e) => handleCategoryToggle(category, e.target.checked)}\n          />\n          <span class=\"category-label\">{category}</span>\n        </label>\n      {/each}\n    </div>\n    \n    <!-- Validation Message -->\n    {#if !Object.values(enabledCategories).some(enabled => enabled)}\n      <div class=\"error-text\">\n        At least one category must be enabled to start learning!\n      </div>\n    {/if}\n\n<style>\n  /* Component-specific styles for CategoryManager */\n  .categories-section {\n    margin-top: 1rem;\n  }\n  \n  .categories-list {\n    margin-top: 0.5rem;\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 0.5rem;\n  }\n  \n  @media (min-width: 640px) {\n    .categories-list {\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n  \n  /* Fieldset styling for categories */\n  fieldset {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n  \n  legend {\n    padding: 0;\n    margin-bottom: 0.5rem;\n  }\n</style>\n  </div>\n{/if}\n","<!-- DeveloperSettings.svelte -->\n<script>\n  export let showDeveloperSettings;\n  export let loggingVerbosity;\n  \n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n</script>\n\n{#if showDeveloperSettings}\n  <div class=\"developer-settings\">\n    <h3 class=\"section-header\">🛠️ Developer Settings</h3>\n    <div class=\"threshold-setting developer-setting\">\n      <label class=\"form-label\">\n        Console Logging Verbosity: {loggingVerbosity}\n        <span class=\"threshold-description\">\n          {loggingVerbosity === 0 ? 'Silent - no console output' :\n           loggingVerbosity <= 3 ? 'Quiet - errors and warnings only' :\n           loggingVerbosity <= 6 ? 'Normal - important events' :\n           'Verbose - detailed debugging info'}\n        </span>\n      </label>\n      <input \n        type=\"range\" \n        min=\"0\" \n        max=\"10\" \n        step=\"1\"\n        bind:value={loggingVerbosity}\n        class=\"threshold-slider\"\n      />\n      <div class=\"threshold-labels\">\n        <span>Silent (0)</span>\n        <span>Default (5)</span>\n        <span>Verbose (10)</span>\n      </div>\n      \n      <!-- Debug Testing Buttons -->\n      <div class=\"debug-buttons\">\n        <button \n          class=\"debug-btn pass-btn\"\n          on:click={() => dispatch('debugTest', { action: 'pass' })}\n        >\n          ✅ Pass Next Test\n        </button>\n        <button \n          class=\"debug-btn fail-btn\"\n          on:click={() => dispatch('debugTest', { action: 'fail' })}\n        >\n          ❌ Fail Next Test\n        </button>\n      </div>\n    </div>\n  </div>\n{/if}\n\n<style>\n  /* Component-specific styles for DeveloperSettings */\n  .developer-settings {\n    margin-top: 1.5rem;\n  }\n  \n  .developer-setting {\n    border: 2px dashed #8b5cf6;\n    background: rgba(139, 92, 246, 0.05);\n    border-radius: 0.5rem;\n    padding: 1rem;\n    margin-top: 1rem;\n  }\n  \n  .debug-buttons {\n    display: flex;\n    gap: 0.5rem;\n    margin-top: 1rem;\n  }\n  \n  .debug-btn {\n    padding: 0.5rem 1rem;\n    border: none;\n    border-radius: 0.375rem;\n    font-size: 0.875rem;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s;\n    flex: 1;\n  }\n  \n  .pass-btn {\n    background: #10b981;\n    color: white;\n  }\n  \n  .pass-btn:hover {\n    background: #059669;\n  }\n  \n  .fail-btn {\n    background: #ef4444;\n    color: white;\n  }\n  \n  .fail-btn:hover {\n    background: #dc2626;\n  }\n</style>","<!-- LearningSession.svelte -->\n<script>\n  import { createEventDispatcher } from 'svelte';\n  \n  export let currentPhrase;\n  export let status;\n  export let isLearning;\n  export let canStart;\n  export let showCategory;\n  export let showFeedback;\n  export let showExpectedOutput;\n  export let enableAudioHints;\n  export let heardPronunciation = '';\n  export let log = (level, ...args) => {}; // Default no-op if not provided\n  \n  const dispatch = createEventDispatcher();\n  \n  function shouldShowExpectedOutput(phrase) {\n    if (showExpectedOutput === 'always') return true;\n    if (showExpectedOutput === 'never') return false;\n    if (showExpectedOutput === 'struggling') {\n      if (!phrase.recentResults || phrase.recentResults.length === 0) {\n        return true; // Show for new phrases with no history\n      }\n      const successCount = phrase.recentResults.filter(r => r === 1).length;\n      const successRate = successCount / phrase.recentResults.length;\n      return successRate < 0.25;\n    }\n    return true; // Default fallback\n  }\n  \n  // Debug: Log current phrase data\n  $: if (currentPhrase) {\n    log(8, '🎯 LearningSession currentPhrase:', {\n      source: currentPhrase.source,\n      target: currentPhrase.target,\n      pronunciation: currentPhrase.pronunciation,\n      hasPronunciation: !!currentPhrase.pronunciation,\n      fullPhrase: currentPhrase\n    });\n  }\n  \n  function shouldShowAudioHint(phrase) {\n    if (!enableAudioHints || !phrase.recentResults || phrase.recentResults.length === 0) {\n      return false;\n    }\n    \n    const successCount = phrase.recentResults.filter(r => r === 1).length;\n    const successRate = successCount / phrase.recentResults.length;\n    \n    // Show hint if: has some correct attempts (> 0) but success rate is less than 50%\n    return successCount > 0 && successRate < 0.5;\n  }\n  \n  function handleStartStop() {\n    dispatch('startStop');\n  }\n</script>\n\n<!-- Current Phrase Display -->\n<div class=\"phrase-display\">\n  {#if currentPhrase}\n    <div class=\"phrase-content\">\n      {#if showCategory}\n        <p class=\"phrase-category\">Category: {currentPhrase.category}</p>\n      {/if}\n      <p class=\"phrase-label\">Translate this:</p>\n      <p class=\"phrase-text\">{currentPhrase.source}</p>\n      {#if shouldShowExpectedOutput(currentPhrase)}\n        <p class=\"expected-text\">Expected: {currentPhrase.target}</p>\n        {#if currentPhrase.pronunciation}\n          <p class=\"pronunciation-text\">Pronunciation: /{Array.isArray(currentPhrase.pronunciation) ? currentPhrase.pronunciation[0] : currentPhrase.pronunciation}/</p>\n        {/if}\n      {/if}\n      {#if heardPronunciation}\n        <p class=\"heard-pronunciation-text\">You said: /{heardPronunciation}/</p>\n      {/if}\n    </div>\n  {:else}\n    <p class=\"placeholder-text\">Ready to start learning</p>\n  {/if}\n</div>\n\n<!-- Status Area -->\n<div class=\"status-area\">\n  {#if showFeedback}\n    <p class=\"status-text\">{status}</p>\n  {:else if currentPhrase && shouldShowAudioHint(currentPhrase)}\n    <p class=\"status-text\">🎯 Here is a hint for you</p>\n  {:else if isLearning}\n    <p class=\"status-text\">Listening...</p>\n  {:else}\n    <p class=\"status-text\">Ready to start learning!</p>\n  {/if}\n</div>\n\n<!-- Start/Stop Button -->\n<div class=\"button-container\">\n  <button \n    class=\"start-stop-btn {isLearning ? 'stop-btn' : 'start-btn'}\"\n    disabled={!canStart && !isLearning}\n    on:click={handleStartStop}\n  >\n    <span class=\"btn-icon\">{isLearning ? '⏹️' : '▶️'}</span>\n    {isLearning ? 'Stop Learning' : 'Start Learning'}\n  </button>\n</div>\n\n<style>\n  .pronunciation-text {\n    color: #666;\n    font-style: italic;\n    font-size: 0.9em;\n    margin-top: 0.25rem;\n  }\n  \n  .heard-pronunciation-text {\n    color: #4a90e2;\n    font-style: italic;\n    font-size: 0.9em;\n    margin-top: 0.25rem;\n    font-weight: 500;\n  }\n</style>\n","<!-- QueueDisplay.svelte -->\n<script>\n  export let showUpcomingQueue;\n  export let upcomingQueue;\n</script>\n\n{#if showUpcomingQueue && upcomingQueue.length > 0}\n  <div class=\"queue-section\">\n    <h3 class=\"queue-title\">Complete Learning Queue ({upcomingQueue.length} items)</h3>\n    <div class=\"queue-list\">\n      {#each upcomingQueue as item}\n        <div class=\"queue-item\" class:current={item.position === 1}>\n          <span class=\"queue-position\">#{item.position}</span>\n          <span class=\"queue-text\">{item.source}</span>\n          <span class=\"queue-category\">{item.category}</span>\n          <span class=\"queue-success-rate\" class:struggling={item.successRate < 0.3} class:mastered={item.successRate > 0.7}>\n            {item.recentResults.length === 0 ? 'New' : `${(item.successRate * 100).toFixed(0)}%`}\n          </span>\n          <span class=\"queue-success-count\">\n            {item.recentResults.filter(r => r).length}/{item.recentResults.length}\n          </span>\n        </div>\n      {/each}\n    </div>\n  </div>\n{/if}\n","<!-- App-Refactored.svelte - Complete and Untruncated! -->\n<script>\n  import { onMount, onDestroy } from 'svelte';\n  import { LearningQueue } from './LearningQueue.js';\n  import { LanguageTutor } from './LanguageTutor.js';\n  import { settings } from './settingsStore.js';\n  \n  // Import our lovely new components\n  import LanguageSettings from './LanguageSettings.svelte';\n  import DisplaySettings from './DisplaySettings.svelte';\n  import AlgorithmSettings from './AlgorithmSettings.svelte';\n  import CategoryManager from './CategoryManager.svelte';\n  import DeveloperSettings from './DeveloperSettings.svelte';\n  import LearningSession from './LearningSession.svelte';\n  import QueueDisplay from './QueueDisplay.svelte';\n  \n  // Core application state\n  let showSettings = false;\n  let isLearning = false;\n  let currentPhrase = null;\n  let status = \"Ready to start learning!\";\n  let learningQueue = null;\n  let tutor = null;\n  let categories = [];\n  let upcomingQueue = [];\n  let isInitialized = false;\n  let heardPronunciation = '';\n  \n  // Settings from store\n  let currentSettings = {};\n  \n  // Subscribe to settings store\n  let previousNativeLanguage = '';\n  let previousLearningLanguage = '';\n  \n  settings.subscribe(value => {\n    const oldSettings = currentSettings;\n    currentSettings = value;\n    \n    // Update systems only when language settings change (not other settings)\n    if (isInitialized && (\n      oldSettings.nativeLanguage !== value.nativeLanguage ||\n      oldSettings.learningLanguage !== value.learningLanguage\n    )) {\n      updateSystems();\n    }\n  });\n  \n  const languageOptions = {\n    'English': ['Italian', 'Spanish']\n    // Future: 'Spanish': ['English'], 'French': ['English', 'German'], etc.\n  };\n  \n  // Derive arrays from the hash\n  const nativeLanguages = Object.keys(languageOptions);\n  $: learningLanguages = languageOptions[currentSettings.nativeLanguage] || [];\n  \n  // Reactive computed values\n  $: canStart = Object.values(currentSettings.enabledCategories).some(enabled => enabled) &&\n                categories.length > 0;\n  \n  // Reactive updates for tutor and queue options (but not during language changes)\n  // LanguageTutor now uses passed-in log function, no need to update loggingVerbosity\n  \n  // LearningQueue now uses passed-in log function, no need to update loggingVerbosity\n  \n  $: if (learningQueue && currentSettings.repetitivenessFactor !== undefined && learningQueue.options) {\n    learningQueue.updateOptions({ repetitivenessFactor: currentSettings.repetitivenessFactor });\n  }\n  \n  $: if (learningQueue && currentSettings.passThreshold !== undefined && learningQueue.options) {\n    learningQueue.updateOptions({ passThreshold: currentSettings.passThreshold });\n  }\n  \n  \n  // ========== LOGGING SYSTEM ==========\n  function log(level, ...args) {\n    if (currentSettings.loggingVerbosity >= level) {\n      console.log(...args);\n    }\n  }\n  \n  function logError(level, ...args) {\n    if (currentSettings.loggingVerbosity >= level) {\n      console.error(...args);\n    }\n  }\n  \n  function logWarn(level, ...args) {\n    if (currentSettings.loggingVerbosity >= level) {\n      console.warn(...args);\n    }\n  }\n  \n  // ========== LIFECYCLE ==========\n  onMount(async () => {\n    log(4, '🚀 App mounted, loading settings...');\n    \n    // Load settings from localStorage\n    settings.load();\n    \n    // Wait a tick for settings to propagate\n    await new Promise(resolve => setTimeout(resolve, 0));\n    \n    // Initialize systems\n    await initializeSystems();\n    \n    isInitialized = true;\n    log(4, '🎉 App initialization complete');\n  });\n  \n  // Clean up when component is destroyed\n  onDestroy(() => {\n    log(4, '🧹 App being destroyed, cleaning up...');\n    \n    // Stop any active learning session to release microphone\n    if (isLearning) {\n      stopLearningSession();\n    }\n    \n    // Clean up tutor and queue instances\n    if (tutor) {\n      tutor.destroy();\n    }\n  });\n  \n  // ========== SYSTEM INITIALIZATION ==========\n  async function initializeSystems() {\n    await initializeLearningQueue();\n    initializeTutor();\n  }\n  \n  async function updateSystems() {\n    // Reinitialize when core settings change\n    if (learningQueue || tutor) {\n      await initializeLearningQueue();\n      initializeTutor();\n    }\n  }\n  \n  async function initializeLearningQueue() {\n    log(5, '🏗️ Initializing LearningQueue for:', currentSettings.nativeLanguage, '→', currentSettings.learningLanguage);\n    \n    categories = [];\n    \n    learningQueue = new LearningQueue(\n      currentSettings.nativeLanguage, \n      currentSettings.learningLanguage, \n      'basic', \n      'learning/', \n      {\n        passThreshold: currentSettings.passThreshold,\n        memoryLength: 20,\n        repetitivenessFactor: currentSettings.repetitivenessFactor\n      },\n      log // Pass the log function to LearningQueue\n    );\n    \n    await learningQueue.init();\n    \n    const availableCategories = learningQueue.getCategories();\n    categories = availableCategories;\n    \n    // Restore or initialize category preferences\n    const newEnabledCategories = {};\n    availableCategories.forEach(category => {\n      newEnabledCategories[category] = currentSettings.enabledCategories[category] ?? true;\n      learningQueue.setCategory(category, newEnabledCategories[category]);\n    });\n    \n    settings.updateSetting('enabledCategories', newEnabledCategories);\n    updateUpcomingQueue();\n    \n    log(5, '✅ LearningQueue initialization complete');\n  }\n  \n  function initializeTutor() {\n    tutor = new LanguageTutor(null, currentSettings.nativeLanguage, currentSettings.learningLanguage, {\n      apiKeyEndpoint: 'openai.php',\n      feedbackThreshold: currentSettings.translationThreshold,\n      passThreshold: currentSettings.passThreshold,\n      audioPath: 'audio/',\n      enableAudioHints: currentSettings.enableAudioHints,\n      statusCallback: (message) => {\n        if (!currentSettings.showFeedback && isLearning) {\n          if (message.includes('Listen to this')) {\n            status = `Listen to the ${currentSettings.nativeLanguage} phrase...`;\n          } else if (message.includes('Now say it in')) {\n            status = `Now say it in ${currentSettings.learningLanguage}...`;\n          }\n        } else {\n          status = message;\n        }\n      }\n    }, log); // Pass the log function to LanguageTutor\n  }\n  \n  // ========== EVENT HANDLERS ==========\n  \n  function handleCategoryChange(event) {\n    const { category, enabled } = event.detail;\n    \n    // No need to update settings here - binding handles that automatically\n    // Just update the LearningQueue\n    if (learningQueue) {\n      learningQueue.setCategory(category, enabled);\n      updateUpcomingQueue();\n    }\n  }\n  \n  function handleDebugTest(event) {\n    const { action } = event.detail;\n    \n    if (!learningQueue) {\n      log(3, '❌ Debug test failed: no learning queue');\n      return;\n    }\n    \n    const phrase = learningQueue.getNextTest();\n    if (!phrase) {\n      log(3, '❌ Debug test failed: no phrases available');\n      return;\n    }\n    \n    // Simulate pass (score 10) or fail (score 0)\n    const score = action === 'pass' ? 10 : 0;\n    \n    log(5, `🐛 Debug ${action}: \"${phrase.source}\" → \"${phrase.target}\" (score: ${score})`);\n    \n    // Score the test directly through the learning queue\n    learningQueue.scoreCurrentTest(score);\n    updateUpcomingQueue();\n    \n    status = `Debug ${action}: \"${phrase.source}\" scored ${score}/10`;\n  }\n  \n  \n  function updateUpcomingQueue() {\n    if (learningQueue && currentSettings.showUpcomingQueue) {\n      upcomingQueue = learningQueue.getTopQueueItems();\n      log(7, '📋 Updated upcoming queue:', upcomingQueue.length, 'items');\n    }\n  }\n  \n  // ========== LEARNING SESSION ==========\n  async function startLearningSession() {\n    if (!learningQueue || !tutor) {\n      status = \"Blimey! Something's gone wrong with the initialisation.\";\n      return;\n    }\n\n    try {\n      // Start persistent microphone session to avoid repeated connections\n      log(5, '🎓 Starting persistent microphone session for learning');\n      await tutor.startLearningSession();\n      \n      isLearning = true;\n      status = \"Right then, let's get cracking!\";\n      \n      await runLearningLoop();\n    } catch (error) {\n      log(2, '❌ Failed to start learning session:', error);\n      status = \"Couldn't access your microphone. Please check your permissions and try again.\";\n      isLearning = false;\n    }\n  }\n  \n  async function runLearningLoop() {\n    while (isLearning) {\n      const phrase = learningQueue.getNextTest();\n      if (!phrase) {\n        status = \"No more phrases available! Check your category settings.\";\n        stopLearningSession();\n        break;\n      }\n      \n      log(8, '📋 Got phrase from queue:', phrase);\n      log(8, '📊 Phrase recentResults:', phrase.recentResults, 'length:', phrase.recentResults?.length);\n      \n      currentPhrase = phrase;\n      heardPronunciation = ''; // Clear previous heard pronunciation\n      status = `Ready to listen to ${currentSettings.nativeLanguage} phrase...`;\n      \n      if (!isLearning) break;\n      \n      try {\n        const result = await tutor.test(phrase.source, phrase.target, phrase.pronunciation || '', phrase.recentResults || []);\n        \n        // Capture heard pronunciation from result\n        heardPronunciation = result.heardPronunciation || '';\n        \n        if (result.stop || !isLearning) {\n          stopLearningSession();\n          break;\n        } else if (result.score === 0) {\n          status = `No response detected - ${result.commentary}`;\n          log(6, `⏳ Pausing ${currentSettings.pauseBetweenTests} seconds before repeating phrase`);\n          await new Promise(resolve => setTimeout(resolve, currentSettings.pauseBetweenTests * 1000));\n        } else {\n          learningQueue.scoreCurrentTest(result.score);\n          updateUpcomingQueue();\n          \n          status = `Score: ${result.score}/10 - ${result.commentary}`;\n          \n          // Use dynamic pause duration based on performance\n          const pauseDuration = getPauseDuration(phrase, result.score);\n          log(6, `⏳ Pausing ${pauseDuration} seconds before next phrase`);\n          await new Promise(resolve => setTimeout(resolve, pauseDuration * 1000));\n        }\n      } catch (error) {\n        status = \"Smeg! Something went wrong with the AI. Try again.\";\n        stopLearningSession();\n        break;\n      }\n    }\n  }\n  \n  function getPauseDuration(phrase, score) {\n    if (!phrase || !phrase.recentResults || phrase.recentResults.length === 0) {\n      return currentSettings.pauseBetweenTests;\n    }\n    \n    const successCount = phrase.recentResults.filter(r => r === 1).length;\n    const successRate = successCount / phrase.recentResults.length;\n    const isStruggling = successRate < 0.25 || score < 4;\n    \n    return isStruggling ? currentSettings.pauseWhenStruggling : currentSettings.pauseBetweenTests;\n  }\n  \n  \n  function stopLearningSession() {\n    isLearning = false;\n    \n    // Stop persistent microphone session\n    if (tutor && tutor.isSessionActive()) {\n      log(5, '🎓 Stopping persistent microphone session');\n      tutor.stopLearningSession();\n    }\n    \n    if (!status.includes('Score:') && !status.includes('commentary')) {\n      status = \"Learning session stopped. Ready when you are!\";\n    }\n    currentPhrase = null;\n  }\n  \n  function handleStartStop() {\n    if (isLearning) {\n      stopLearningSession();\n    } else {\n      startLearningSession();\n    }\n  }\n  \n  // ========== SETTINGS UI ==========\n  function toggleSettings() {\n    showSettings = !showSettings;\n  }\n  \n  // Easter egg: Long press on settings cog for developer settings\n  let settingsLongPressTimer = null;\n  \n  function handleSettingsMouseDown() {\n    settingsLongPressTimer = setTimeout(() => {\n      settings.updateSetting('showDeveloperSettings', !currentSettings.showDeveloperSettings);\n      log(3, '🥚 Developer settings easter egg triggered!', currentSettings.showDeveloperSettings ? 'Enabled' : 'Disabled');\n      \n      const settingsButton = document.querySelector('.settings-toggle');\n      if (settingsButton) {\n        settingsButton.style.transform = 'scale(0.95)';\n        setTimeout(() => settingsButton.style.transform = '', 150);\n      }\n    }, 2000);\n  }\n  \n  function handleSettingsMouseUp() {\n    if (settingsLongPressTimer) {\n      clearTimeout(settingsLongPressTimer);\n      settingsLongPressTimer = null;\n    }\n  }\n  \n  function handleSettingsMouseLeave() {\n    if (settingsLongPressTimer) {\n      clearTimeout(settingsLongPressTimer);\n      settingsLongPressTimer = null;\n    }\n  }\n  \n  // ========== MANAGEMENT ACTIONS ==========\n  function resetLearningQueue() {\n    if (learningQueue && confirm('Are you sure you want to reset the learning queue? This will clear all progress and start fresh.')) {\n      learningQueue.reset();\n      \n      const availableCategories = learningQueue.getCategories();\n      categories = availableCategories;\n      \n      const newEnabledCategories = {};\n      availableCategories.forEach(category => {\n        newEnabledCategories[category] = true;\n        learningQueue.setCategory(category, true);\n      });\n      \n      settings.updateSetting('enabledCategories', newEnabledCategories);\n      updateUpcomingQueue();\n      \n      status = 'Learning queue reset successfully!';\n      setTimeout(() => {\n        if (!isLearning) status = \"Ready to start learning!\";\n      }, 3000);\n    }\n  }\n</script>\n\n<main class=\"app-container\">\n  <!-- Title -->\n  <div class=\"title\">\n    <h1>Language Tutor</h1>\n    <p>Your personal AI language learning companion</p>\n  </div>\n\n  <!-- Learning Session Component -->\n  <LearningSession\n    {currentPhrase}\n    {status}\n    {isLearning}\n    {canStart}\n    showCategory={currentSettings.showCategory}\n    showFeedback={currentSettings.showFeedback}\n    showExpectedOutput={currentSettings.showExpectedOutput}\n    enableAudioHints={currentSettings.enableAudioHints}\n    {heardPronunciation}\n    {log}\n    on:startStop={handleStartStop}\n  />\n\n  <!-- Settings Section -->\n  <div class=\"settings-section\">\n    <button \n      class=\"settings-toggle\" \n      on:click={toggleSettings}\n      on:mousedown={handleSettingsMouseDown}\n      on:mouseup={handleSettingsMouseUp}\n      on:mouseleave={handleSettingsMouseLeave}\n      on:touchstart={handleSettingsMouseDown}\n      on:touchend={handleSettingsMouseUp}\n      title={currentSettings.showDeveloperSettings ? \"Developer mode active! Long press again to disable.\" : \"Long press for developer settings\"}\n    >\n      <span class=\"settings-icon\" class:developer-mode={currentSettings.showDeveloperSettings}>⚙️</span>\n      Settings\n      <span class=\"chevron-icon\">{showSettings ? '⬆️' : '⬇️'}</span>\n    </button>\n\n    {#if showSettings}\n      <div class=\"settings-panel\">\n        <!-- Language Selection -->\n        <LanguageSettings\n          nativeLanguage={currentSettings.nativeLanguage}\n          learningLanguage={currentSettings.learningLanguage}\n          {nativeLanguages}\n          {learningLanguages}\n          loggingVerbosity={currentSettings.loggingVerbosity}\n        />\n\n        <!-- Display Options -->\n        <DisplaySettings\n          bind:showExpectedOutput={currentSettings.showExpectedOutput}\n          bind:showCategory={currentSettings.showCategory}\n          bind:showFeedback={currentSettings.showFeedback}\n          bind:showUpcomingQueue={currentSettings.showUpcomingQueue}\n          bind:enableAudioHints={currentSettings.enableAudioHints}\n          bind:translationThreshold={currentSettings.translationThreshold}\n          bind:pauseBetweenTests={currentSettings.pauseBetweenTests}\n          bind:pauseWhenStruggling={currentSettings.pauseWhenStruggling}\n          on:updateQueue={updateUpcomingQueue}\n        />\n\n        <!-- Algorithm Settings -->\n        <AlgorithmSettings\n          bind:passThreshold={currentSettings.passThreshold}\n          bind:repetitivenessFactor={currentSettings.repetitivenessFactor}\n        />\n\n        <!-- Categories -->\n        <CategoryManager\n          {categories}\n          bind:enabledCategories={currentSettings.enabledCategories}\n          loggingVerbosity={currentSettings.loggingVerbosity}\n          on:categoryChange={handleCategoryChange}\n        />\n        \n        <!-- Management Buttons -->\n        <div class=\"management-section\">\n          <h3 class=\"section-header\">Management</h3>\n          <div class=\"management-buttons\">\n<button \n              class=\"management-btn reset-btn\"\n              on:click={resetLearningQueue}\n              disabled={!learningQueue}\n            >\n              🔄 Reset Learning Queue\n            </button>\n          </div>\n        </div>\n\n        <!-- Developer Settings -->\n        <DeveloperSettings\n          showDeveloperSettings={currentSettings.showDeveloperSettings}\n          bind:loggingVerbosity={currentSettings.loggingVerbosity}\n          on:debugTest={handleDebugTest}\n        />\n      </div>\n    {/if}\n  </div>\n\n  <!-- Queue Display Component -->\n  <QueueDisplay\n    showUpcomingQueue={currentSettings.showUpcomingQueue}\n    {upcomingQueue}\n  />\n</main>\n\n<style>\n  /* Developer settings styling */\n  .settings-icon.developer-mode {\n    color: #8b5cf6;\n    text-shadow: 0 0 8px rgba(139, 92, 246, 0.6);\n    animation: pulse 2s infinite;\n  }\n  \n  @keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.7; }\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n    target: document.body\n});\n\nexport default app;\n"],"names":["create_if_block_1","create_if_block_2","create_if_block_3","create_if_block","func"],"mappings":"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"}